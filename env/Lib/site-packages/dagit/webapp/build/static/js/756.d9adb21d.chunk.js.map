{"version":3,"file":"static/js/756.d9adb21d.chunk.js","mappings":"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","sources":["../../core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","../../core/src/instance/RepoFilterButton.tsx","../../core/src/workspace/ReloadAllButton.tsx"],"sourcesContent":["import {Page, PageHeader, Heading} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport const AssetsGroupsGlobalGraphRoot: React.FC = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode](\n        `/asset-groups${explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(\n          __GLOBAL__,\n          '',\n        )}`,\n      );\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        return !visibleRepos.some(\n          (repo) =>\n            repo.repositoryLocation.name === node.repository.location.name &&\n            repo.repository.name === node.repository.name,\n        );\n      },\n    };\n    return options;\n  }, [visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={\n          <div style={{marginBottom: -8}}>\n            <ReloadAllButton label=\"Reload definitions\" />\n          </div>\n        }\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        fetchOptionFilters={<>{allRepos.length > 1 && <RepoFilterButton />}</>}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={explorerPathFromString(__GLOBAL__ + path || '/')}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n","import {Box, Button, DialogFooter, DialogHeader, Dialog, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {RepoSelector} from '../nav/RepoSelector';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nexport const RepoFilterButton: React.FC = () => {\n  const {allRepos, visibleRepos, toggleVisible} = React.useContext(WorkspaceContext);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Dialog\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        style={{width: 'auto'}}\n        onClose={() => setOpen(false)}\n      >\n        <DialogHeader icon=\"repo\" label=\"Filter code locations\" />\n        <RepoSelector\n          options={allRepos}\n          onBrowse={() => setOpen(false)}\n          onToggle={toggleVisible}\n          selected={visibleRepos}\n        />\n        <DialogFooter>\n          <Box padding={{top: 8}}>\n            <Button intent=\"none\" onClick={() => setOpen(false)}>\n              Done\n            </Button>\n          </Box>\n        </DialogFooter>\n      </Dialog>\n\n      <Button\n        intent=\"none\"\n        icon={<Icon name=\"folder\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n        onClick={() => setOpen(true)}\n      >\n        {`${visibleRepos.length} of ${allRepos.length}`}\n      </Button>\n    </>\n  );\n};\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["__GLOBAL__","AssetsGroupsGlobalGraphRoot","path","useParams","React","WorkspaceContext","allRepos","visibleRepos","history","useHistory","useDocumentTitle","onChangeExplorerPath","mode","explorerPathToString","pipelineName","replace","onNavigateToSourceAssetNode","node","push","assetDetailsPathForKey","assetKey","view","fetchOptions","hideEdgesToNodesOutsideQuery","hideNodesMatching","some","repo","repositoryLocation","name","repository","location","style","display","flexDirection","paddingBottom","title","right","marginBottom","label","fetchOptionFilters","length","options","preferAssetRendering","explodeComposites","explorerPath","explorerPathFromString","RepoFilterButton","toggleVisible","open","setOpen","canOutsideClickClose","canEscapeKeyClose","isOpen","width","onClose","icon","onBrowse","onToggle","selected","padding","top","intent","onClick","rightIcon","ReloadAllButton","useUnscopedPermissions","canReloadWorkspace","permissions","disabledReasons","useRepositoryLocationReload","scope","reloadFn","reloadFnForWorkspace","reloading","tryReload","error","errorLocationId","setIsOpen","loading","onTryReload","onDismiss","content","disabled"],"sourceRoot":""}