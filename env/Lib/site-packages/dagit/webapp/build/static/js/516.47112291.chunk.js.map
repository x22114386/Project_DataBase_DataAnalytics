{"version":3,"file":"static/js/516.47112291.chunk.js","mappings":"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","sources":["../../core/src/app/GraphQueryImpl.ts","../../core/src/gantt/Constants.ts","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/runs/LogLevel.ts","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/schedules/TimestampDisplay.tsx","../../core/src/ui/GraphQueryInput.tsx","../../ui/src/components/ButtonGroup.tsx","../../ui/src/components/Slider.tsx","../../ui/src/components/SplitPanelContainer.tsx","../../ui/src/components/useViewport.tsx"],"sourcesContent":["import {isPlannedDynamicStep, dynamicKeyWithoutIndex} from '../gantt/DynamicStepSupport';\n\nconst MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, applyingEmptyDefault: false, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY ? [] : items,\n      applyingEmptyDefault: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY,\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d>\\[\\?\\]\\\"_\\/-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause, itemName, descendentsClause] = parts;\n\n    const itemsMatching = items.filter((s) => {\n      if (isPlannedDynamicStep(itemName.replace(/\\\"/g, ''))) {\n        // When unresolved dynamic step (i.e ends with `[?]`) is selected, match all dynamic steps\n        return s.name.startsWith(dynamicKeyWithoutIndex(itemName.replace(/\\\"/g, '')));\n      } else {\n        return /\\\".*\\\"/.test(itemName)\n          ? s.name === itemName.replace(/\\\"/g, '')\n          : s.name.includes(itemName);\n      }\n    });\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n    applyingEmptyDefault: false,\n  };\n}\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 16;\nexport const TOP_INSET = 16;\nexport const BOTTOM_INSET = 16;\nexport const FLAT_INSET_FROM_PARENT = 16;\nexport const BOX_HEIGHT = 34;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","/**\n * Ops with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function isPlannedDynamicStep(stepKey: string) {\n  return stepKey.endsWith('[?]');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0];\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]);\n}\n","import {Colors} from '@dagster-io/ui';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  FLAT_INSET_FROM_PARENT,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n} from './Constants';\nimport {isDynamicStep, isPlannedDynamicStep, dynamicKeyWithoutIndex} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => deepen(child, box.x + box.width + BOX_SPACING_X));\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      parents[child.node.name] = parents[child.node.name] || [];\n      parents[child.node.name].push(box);\n    });\n  });\n\n  boxes.forEach((box) => {\n    boxesByY[`${box.y}`] = boxesByY[`${box.y}`] || [];\n    boxesByY[`${box.y}`].push(box);\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    for (let idx = boxes.length - 1; idx > 0; idx--) {\n      const box = boxes[idx];\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`];\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`].filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`].push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y];\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0].root ? LEFT_INSET : parents[row[0].node.name][0].x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureSubtreeAfterParentInArray = (\n  boxes: GanttChartBox[],\n  parent: GanttChartBox,\n  box: GanttChartBox,\n) => {\n  const parentIdx = boxes.indexOf(parent);\n  const boxIdx = boxes.indexOf(box);\n  if (parentIdx <= boxIdx) {\n    return;\n  }\n  boxes.splice(boxIdx, 1);\n  boxes.splice(parentIdx, 0, box);\n\n  // Note: It's important that we don't cache or pass indexes during this recursion.\n  // Visiting a child below could cause boxes earlier in the array to be pulled to the\n  // end. Our `parentIdx` above is not stable within the box.children loop below.\n\n  for (const child of box.children) {\n    ensureSubtreeAfterParentInArray(boxes, box, child);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n\n      // Hide the unresolved node if any its resolved node exists\n      if (\n        isPlannedDynamicStep(depNode.name) &&\n        seen\n          .filter((n) => isDynamicStep(n))\n          .some((n) => dynamicKeyWithoutIndex(n) === dynamicKeyWithoutIndex(depNode.name))\n      ) {\n        continue;\n      }\n\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx];\n        ensureSubtreeAfterParentInArray(boxes, box, depBox);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst TextColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue700,\n  [IStepState.RETRY_REQUESTED]: Colors.White,\n  [IStepState.SUCCEEDED]: Colors.White,\n  [IStepState.FAILED]: Colors.White,\n  [IStepState.SKIPPED]: Colors.White,\n  [IStepState.UNKNOWN]: Colors.White,\n};\n\nconst BackgroundColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue100,\n  [IStepState.RETRY_REQUESTED]: Colors.Yellow500,\n  [IStepState.SUCCEEDED]: Colors.Green500,\n  [IStepState.FAILED]: Colors.Red500,\n  [IStepState.SKIPPED]: Colors.Gray500,\n  [IStepState.UNKNOWN]: Colors.Gray400,\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `#2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      color: TextColorForStates[state] || Colors.White,\n      background: BackgroundColorForStates[state] || Colors.Gray400,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.Gray600,\n    background: Colors.White,\n    border: `1.5px dotted ${Colors.Gray500}`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n  for (let ii = 0; ii < boxes.length; ii++) {\n    nextBoxes[ii].children = boxes[ii].children.map((c) => map.get(c));\n  }\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii];\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let ii = 0; ii < runBoxes.length - 1; ii++) {\n      runBoxes[ii].children = [runBoxes[ii + 1]];\n    }\n    runBoxes[runBoxes.length - 1].children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (_box, run) => ({\n      x: run ? xForMs(run.start) : 0,\n      width: run ? widthForMs(run) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k].state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `\"${k}\"`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonLink, Colors, Group, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunStateSummary, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\n\nimport {\n  RunGroupPanelQuery,\n  RunGroupPanelQueryVariables,\n  RunGroupPanelRunFragment,\n} from './types/RunGroupPanel.types';\n\ntype Run = RunGroupPanelRunFragment;\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string; runStatusLastChangedAt: number}> = ({\n  runId,\n  runStatusLastChangedAt,\n}) => {\n  const queryResult = useQuery<RunGroupPanelQuery, RunGroupPanelQueryVariables>(\n    RUN_GROUP_PANEL_QUERY,\n    {\n      variables: {runId},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const {data, refetch} = queryResult;\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  // Because the RunGroupPanel makes it's own query for the runs and their statuses,\n  // the log + gantt chart UI can show that the run is \"completed\" for up to 15s before\n  // it's reflected in the sidebar. Observing this single timestamp from our parent\n  // allows us to refetch data immediately when the run's exitedAt / startedAt, etc. is set.\n  React.useEffect(() => {\n    if (runStatusLastChangedAt) {\n      refetch();\n    }\n  }, [refetch, runStatusLastChangedAt]);\n\n  const group = data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return null;\n  }\n\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.Blue500}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return null;\n  }\n\n  const unsorted: Run[] = [];\n  (group.runs || []).forEach((run: Run | null) => {\n    if (run && typeof run.startTime === 'number') {\n      unsorted.push(run);\n    }\n  });\n  const runs: Run[] = unsorted.sort((a: Run, b: Run) => {\n    return (a.startTime || 0) - (b.startTime || 0);\n  });\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun key={g.runId} to={`/runs/${g.runId}`} selected={g.runId === runId}>\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatusIndicator status={g.status} />\n              </Box>\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.Gray700,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.runId.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.Gray700,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunStateSummary run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nconst RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      __typename\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          ...RunGroupPanelRun\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment RunGroupPanelRun on Run {\n    id\n    runId\n    parentRunId\n    status\n    stepKeysToExecute\n    pipelineName\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.Gray100 : Colors.White)};\n  padding: 4px 6px 4px 24px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.Gray100 : Colors.Gray50)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 1px;\n  background: ${Colors.Gray200};\n  left: 29px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.Dark};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: Colors.Gray300,\n      color: Colors.White,\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 12,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\n\nimport {GanttChartMode} from './Constants';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FC<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored, succeeded} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    const succeeded = [];\n    for (const key of keys) {\n      const state = metadata.steps[key].state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n          break;\n        case IStepState.SUCCEEDED:\n          succeeded.push(key);\n      }\n    }\n    return {preparing, executing, errored, succeeded};\n  }, [metadata]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  const isFinished = metadata?.exitedAt && metadata.exitedAt > 0;\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel\n        runId={runId}\n        runStatusLastChangedAt={\n          metadata.exitedAt || metadata.startedProcessAt || metadata.startedPipelineAt || 0\n        }\n      />\n      <SidebarSection title={`${isFinished ? 'Not executed' : 'Preparing'} (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection collapsedByDefault title={`Succeeded (${succeeded.length})`}>\n        <div>\n          {succeeded.length === 0 ? (\n            <EmptyNotice>No steps have succeeded</EmptyNotice>\n          ) : (\n            succeeded.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n    </div>\n  );\n};\n\nconst StepItem: React.FC<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = step.end ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position=\"bottom\"\n          content=\"Unknown step state. Run completed without step execution completion.\"\n        >\n          <StepStatusDot>?</StepStatusDot>\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(metadata.steps[name]?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 32px;\n  height: 32px;\n  padding: 0 14px 0 6px;\n  gap: 6px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  font-size: 12px;\n  ${({selected}) => selected && `background: ${Colors.Gray100};`}\n\n  &:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n\nexport const StepStatusDot = styled.div`\n  width: 12px;\n  height: 12px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 12px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.Gray400};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  min-height: 32px;\n  font-size: 12px;\n  padding: 8px 24px;\n  color: ${Colors.Gray400};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Collapse} from '@blueprintjs/core';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\ninterface ISidebarSectionProps {\n  children: React.ReactNode;\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const [open, setOpen] = useStateWithStorage<boolean>(`sidebar-${title}`, (storedValue) =>\n    storedValue === true || storedValue === false ? storedValue : !collapsedByDefault,\n  );\n\n  const onToggle = React.useCallback(() => {\n    setOpen((o) => !o);\n  }, [setOpen]);\n\n  return (\n    <>\n      <CollapsingHeaderBar onClick={onToggle}>\n        <SidebarTitleTextWrap>{title}</SidebarTitleTextWrap>\n        <Icon\n          size={24}\n          name=\"arrow_drop_down\"\n          style={{transform: open ? 'rotate(0)' : 'rotate(-90deg)'}}\n        />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </>\n  );\n};\n\nconst SidebarTitleTextWrap = styled.div`\n  overflow: hidden;\n  min-width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0 0 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :first-child:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.Gray400};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst CollapsingHeaderBar = styled.div`\n  height: 32px;\n  padding-left: 24px;\n  padding-right: 8px;\n  background: ${Colors.White};\n  border-top: 1px solid ${Colors.KeylineGray};\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  color: ${Colors.Gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 700;\n  user-select: none;\n`;\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","import {Colors, FontFamily, MetadataTable, Tooltip} from '@dagster-io/ui';\nimport memoize from 'lodash/memoize';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTimeWithMsec} from '../app/Util';\nimport {TimeContext} from '../app/time/TimeContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: Colors.White,\n    [LogLevel.INFO]: Colors.White,\n    [LogLevel.EVENT]: Colors.White,\n    [LogLevel.WARNING]: Colors.Yellow50,\n    [LogLevel.ERROR]: Colors.Red50,\n    [LogLevel.CRITICAL]: Colors.Red50,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.Gray400,\n      [LogLevel.INFO]: Colors.Gray900,\n      [LogLevel.EVENT]: Colors.Gray900,\n      [LogLevel.WARNING]: Colors.Yellow700,\n      [LogLevel.ERROR]: Colors.Red500,\n      [LogLevel.CRITICAL]: Colors.Red500,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.Gray900};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.KeylineGray};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const OpColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <OpColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={OpColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </OpColumnContainer>\n  );\n};\n\nexport const OpColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px 12px;\n`;\n\nconst OpColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.Dark,\n  background: Colors.White,\n  border: `1px solid ${Colors.Gray100}`,\n  top: -8,\n  left: 1,\n});\n\nconst timestampFormat = memoize((timezone: string) => {\n  return new Intl.DateTimeFormat(navigator.language, {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n  });\n});\n\nconst fractionalSecondFormat = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{\n  time: string | null;\n  runStartTime?: number;\n  stepStartTime?: number;\n}> = React.memo((props) => {\n  const {time, runStartTime, stepStartTime} = props;\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const {\n    timezone: [timezone],\n  } = React.useContext(TimeContext);\n  const canShowTooltip = typeof time === 'string' && typeof runStartTime === 'number';\n\n  const timeString = () => {\n    if (time) {\n      const timeNumber = Number(time);\n      const main = timestampFormat(timezone).format(new Date(timeNumber));\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSecondFormat(navigator.language).format(fractionalSec).slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n  const runElapsedTime = formatElapsedTimeWithMsec(Number(time) - (runStartTime || 0));\n  const stepElapsedTime = formatElapsedTimeWithMsec(Number(time) - (stepStartTime || 0));\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Tooltip\n        canShow={canShowTooltip}\n        content={\n          <MetadataTable\n            spacing={0}\n            dark\n            rows={[\n              {\n                key: 'Since start of run',\n                value: (\n                  <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                    {runElapsedTime}\n                  </span>\n                ),\n              },\n              stepStartTime\n                ? {\n                    key: 'Since start of step',\n                    value: (\n                      <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                        {stepElapsedTime}\n                      </span>\n                    ),\n                  }\n                : null,\n            ]}\n          />\n        }\n        placement=\"left\"\n      >\n        <Link to={href}>{timeString()}</Link>\n      </Tooltip>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 12px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.Gray400};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn = (props: {children: React.ReactNode}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.Gray400};\n  padding: 4px;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 117,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {children: React.ReactNode; onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onResize'> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        <HeaderLabel>{this.props.children}</HeaderLabel>\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        Op\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n    </HeadersContainer>\n  );\n};\n\nexport const HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  z-index: 2;\n`;\n\nexport const HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 0 12px;\n  line-height: 32px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.Gray400 : Colors.KeylineGray)};\n  }\n`;\n\nconst HeaderLabel = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragments.types';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {StepEventStatus} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {LogsProviderLogs} from './LogsProvider';\nimport {RunContext} from './RunContext';\nimport {RunFragment} from './types/RunFragments.types';\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProvider.types';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown', // run exited without step reaching a final state\n}\n\nconst BOX_EXIT_STATES = [\n  IStepState.RETRY_REQUESTED,\n  IStepState.SUCCEEDED,\n  IStepState.FAILED,\n  IStepState.UNKNOWN,\n];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  fileKey: string;\n  stepKeys: string[];\n  pid?: string;\n  externalUrl?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [fileKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => ((logCaptureSteps as any)[stepKey] = {fileKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nconst fromTimestamp = (ts: number | null) => (ts ? Math.floor(ts * 1000) : undefined);\nfunction extractMetadataFromRun(run?: RunFragment): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n  if (!run) {\n    return metadata;\n  }\n  if (run.startTime) {\n    metadata.startedPipelineAt = fromTimestamp(run.startTime);\n  }\n  if (run.endTime) {\n    metadata.exitedAt = fromTimestamp(run.endTime);\n  }\n\n  run.stepStats.forEach((stepStat) => {\n    metadata.steps[stepStat.stepKey] = {\n      // state:\n      // current state\n      state: stepStatusToStepState(stepStat.status),\n\n      // execution start and stop (user-code) inclusive of all retries\n      start: fromTimestamp(stepStat.startTime),\n      end: fromTimestamp(stepStat.endTime),\n\n      // current state + prev state transition times\n      transitions: [],\n\n      // transition times organized into start+stop+exit state pairs.\n      // This is the metadata used to render boxes on the realtime vi.z\n      attempts: stepStat.attempts.map(\n        (attempt, idx) =>\n          ({\n            start: fromTimestamp(attempt.startTime),\n            end: fromTimestamp(attempt.endTime),\n            exitState:\n              idx === stepStat.attempts.length - 1\n                ? stepStatusToStepState(stepStat.status)\n                : IStepState.RETRY_REQUESTED,\n          } as IStepAttempt),\n      ),\n\n      // accumulated metadata\n      markers: stepStat.markers.map((marker, idx) => ({\n        start: fromTimestamp(marker.startTime),\n        end: fromTimestamp(marker.endTime),\n        key: `marker_${idx}`,\n      })),\n    };\n  });\n\n  return metadata;\n}\n\nconst stepStatusToStepState = (status: StepEventStatus | null) => {\n  switch (status) {\n    case StepEventStatus.SUCCESS:\n      return IStepState.SUCCEEDED;\n    case StepEventStatus.FAILURE:\n      return IStepState.FAILED;\n    case StepEventStatus.SKIPPED:\n      return IStepState.SKIPPED;\n    default:\n      return IStepState.UNKNOWN;\n  }\n};\n\nconst refineMarkerEvent = (log: RunMetadataProviderMessageFragment) => {\n  if (\n    log.__typename === 'EngineEvent' ||\n    log.__typename === 'ResourceInitFailureEvent' ||\n    log.__typename === 'ResourceInitStartedEvent' ||\n    log.__typename === 'ResourceInitSuccessEvent' ||\n    log.__typename === 'StepWorkerStartedEvent' ||\n    log.__typename === 'StepWorkerStartingEvent'\n  ) {\n    return log;\n  }\n  return null;\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'RunStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'RunFailureEvent' ||\n      log.__typename === 'RunSuccessEvent' ||\n      log.__typename === 'RunCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (!log.stepKey) {\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.fileKey] = {\n        fileKey: log.fileKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n        externalUrl: log.externalUrl || undefined,\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: IStepState.PREPARING,\n          attempts: [],\n          transitions: [\n            {\n              state: IStepState.PREPARING,\n              time: timestamp,\n            },\n          ],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(step.markers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(step.markers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n\n      if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    // - Each time we see a \"RUNNING\" step transition, we create a new attempt box unless one is open already.\n    // - Each time we see a final step transition, we set it as the end state of the current attempt.\n\n    let attempt: IStepAttempt | null = null;\n    for (const t of step.transitions) {\n      if ((!attempt || attempt.end) && t.state === IStepState.RUNNING) {\n        attempt = {start: t.time};\n        step.attempts.push(attempt);\n      }\n      if (attempt && BOX_EXIT_STATES.includes(t.state)) {\n        attempt.end = t.time;\n        attempt.exitState = t.state;\n      }\n    }\n  }\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: LogsProviderLogs;\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const run = React.useContext(RunContext);\n  const runMetadata = React.useMemo(() => extractMetadataFromRun(run), [run]);\n  const metadata = React.useMemo(\n    () => (logs.loading ? runMetadata : extractMetadataFromLogs(logs.allNodes)),\n    [logs, runMetadata],\n  );\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      pid\n      externalUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        runId\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.MANAGED:\n    case RunStatus.CANCELING:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.STARTING:\n      return 'none';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n      return 'danger';\n    case RunStatus.STARTED:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {Colors, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {TimeContext} from '../app/time/TimeContext';\nimport {DEFAULT_TIME_FORMAT, TimeFormat} from '../app/time/TimestampFormat';\nimport {timestampToString} from '../app/time/timestampToString';\n\ninterface Props {\n  timestamp: number;\n  timezone?: string | null;\n  timeFormat?: TimeFormat;\n  tooltipTimeFormat?: TimeFormat;\n}\n\nexport const TimestampDisplay = (props: Props) => {\n  const {timestamp, timezone, timeFormat, tooltipTimeFormat} = props;\n  const {\n    timezone: [userTimezone],\n    hourCycle: [hourCycle],\n  } = React.useContext(TimeContext);\n\n  const locale = navigator.language;\n  const mainString = timestampToString({\n    timestamp: {unix: timestamp},\n    locale,\n    timezone: timezone || userTimezone,\n    timeFormat,\n    hourCycle,\n  });\n\n  return (\n    <span>\n      <TabularNums style={{minWidth: 0}} title={mainString}>\n        {mainString}\n      </TabularNums>\n      {timezone && timezone !== userTimezone ? (\n        <TimestampTooltip\n          placement=\"top\"\n          content={\n            <TabularNums>\n              {timestampToString({\n                timestamp: {unix: timestamp},\n                locale,\n                timezone: userTimezone,\n                timeFormat: tooltipTimeFormat,\n              })}\n            </TabularNums>\n          }\n        >\n          <Icon name=\"schedule\" color={Colors.Gray400} size={12} />\n        </TimestampTooltip>\n      ) : null}\n    </span>\n  );\n};\n\nTimestampDisplay.defaultProps = {\n  timeFormat: DEFAULT_TIME_FORMAT,\n  tooltipTimeFormat: {showSeconds: false, showTimezone: true},\n};\n\nconst TabularNums = styled.span`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst TimestampTooltip = styled(Tooltip)`\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n  margin-left: 4px;\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent, PopoverPosition} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\nimport {GraphExplorerSolidFragment} from '../pipelines/types/GraphExplorer.types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  popoverPosition?: PopoverPosition;\n  className?: string;\n  disabled?: boolean;\n\n  linkToPreview?: {\n    repoName: string;\n    repoLocation: string;\n    pipelineName: string;\n    isJob: boolean;\n  };\n\n  flattenGraphsEnabled?: boolean;\n  flattenGraphs?: boolean;\n  setFlattenGraphs?: () => void;\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n  autoApplyChanges?: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\ninterface SuggestionItem {\n  name: string;\n  isGraph: boolean;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nconst intentToStrokeColor = (intent: Intent | undefined) => {\n  switch (intent) {\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    case 'primary':\n    default:\n      return Colors.Gray300;\n  }\n};\n\nconst buildSuggestions = (\n  lastElementName: string,\n  items: GraphQueryItem[] | GraphExplorerSolidFragment[],\n  suffix: string,\n) => {\n  const available: SuggestionItem[] = items.map((item) => {\n    const solidItem = item as GraphExplorerSolidFragment;\n    const isGraph =\n      solidItem.definition && solidItem.definition.__typename === 'CompositeSolidDefinition';\n\n    return {name: item.name, isGraph};\n  });\n\n  for (const item of available) {\n    if (isDynamicStep(item.name)) {\n      available.push({name: dynamicKeyWithoutIndex(item.name), isGraph: item.isGraph});\n    }\n  }\n\n  const lastElementLower = lastElementName?.toLowerCase();\n  const matching =\n    lastElementLower && !suffix\n      ? uniq(available)\n          .sort()\n          .filter((n) => n.name.toLowerCase().startsWith(lastElementLower))\n      : [];\n\n  // No need to show a match if our string exactly matches the one suggestion.\n  if (matching.length === 1 && matching[0].name.toLowerCase() === lastElementLower) {\n    return [];\n  }\n\n  return matching;\n};\n\nexport const GraphQueryInput = React.memo(\n  React.forwardRef((props: GraphQueryInputProps, ref) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const flattenGraphsEnabled = props.flattenGraphsEnabled || false;\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]>_\\/-]+)(\\+*\\*?)$/.exec(pendingValue);\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(\n      () => buildSuggestions(lastElementName, props.items, suffix),\n      [lastElementName, props.items, suffix],\n    );\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + `\"${suggestion}\"` + suffix);\n    };\n\n    React.useEffect(() => {\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.map((a) => a.name).findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      if (!suggestions[nextIdx]) {\n        return;\n      }\n      const nextText = suggestions[nextIdx].name;\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    React.useImperativeHandle(ref, () => ({\n      focus() {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      },\n    }));\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        } else {\n          e.currentTarget.blur();\n        }\n        setActive(null);\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx].name, idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const OpSelectionWrapperDivRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n      const clickListener = (event: MouseEvent) => {\n        const OpSelectionWrapperDivElement = OpSelectionWrapperDivRef.current;\n        const inputElement = inputRef.current;\n        const {target} = event;\n\n        if (!flattenGraphsEnabled) {\n          return;\n        }\n        // Make TypeScript happy\n        if (\n          OpSelectionWrapperDivElement == null ||\n          inputElement == null ||\n          !(target instanceof Node)\n        ) {\n          return;\n        }\n\n        // `true` if user clicked on either the `OpSelectionWrapperDivElement` itself, or its descendant\n        const shouldWrapperGetFocus = OpSelectionWrapperDivElement.contains(target);\n        setFocused(shouldWrapperGetFocus);\n\n        const shouldTextInputGetFocus = inputElement.contains(target);\n        if (shouldTextInputGetFocus) {\n          inputElement.focus();\n        }\n      };\n\n      document.addEventListener('click', clickListener);\n\n      return () => {\n        document.removeEventListener('click', clickListener);\n      };\n    }, [flattenGraphsEnabled]);\n\n    const uncomitted = (pendingValue || '*') !== (props.value || '*');\n    const flattenGraphsFlag = props.flattenGraphs ? '!' : '';\n\n    const opCountInfo = props.linkToPreview && (\n      <OpCountWrap $hasWrap={flattenGraphsEnabled}>\n        {`${filterByQuery(props.items, pendingValue).all.length} matching ops`}\n        <Link\n          target=\"_blank\"\n          style={{display: 'flex', alignItems: 'center', gap: 4}}\n          onMouseDown={(e) => e.currentTarget.click()}\n          to={workspacePipelinePath({\n            ...props.linkToPreview,\n            pipelineName: `${props.linkToPreview.pipelineName}~${flattenGraphsFlag}${pendingValue}`,\n          })}\n        >\n          Graph Preview <Icon color={Colors.Link} name=\"open_in_new\" />\n        </Link>\n      </OpCountWrap>\n    );\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <Popover\n          enforceFocus={!flattenGraphsEnabled} // Defer focus to be manually managed\n          isOpen={focused}\n          position={props.popoverPosition || 'top-left'}\n          content={\n            suggestions.length ? (\n              <Menu style={{width: props.width || '24vw'}}>\n                {suggestions.slice(0, 15).map((suggestion) => (\n                  <MenuItem\n                    icon={suggestion.isGraph ? 'job' : 'op'}\n                    key={suggestion.name}\n                    text={suggestion.name}\n                    active={active ? active.text === suggestion.name : false}\n                    onMouseDown={(e: React.MouseEvent<any>) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onConfirmSuggestion(suggestion.name);\n                    }}\n                  />\n                ))}\n              </Menu>\n            ) : (\n              <div />\n            )\n          }\n        >\n          <div style={{position: 'relative'}} ref={OpSelectionWrapperDivRef}>\n            <TextInput\n              disabled={props.disabled}\n              value={pendingValue}\n              icon=\"op_selector\"\n              strokeColor={intentToStrokeColor(props.intent)}\n              autoFocus={props.autoFocus}\n              placeholder={placeholderTextForItems(props.placeholder, props.items)}\n              onChange={(e: React.ChangeEvent<any>) => {\n                setPendingValue(e.target.value);\n                props.autoApplyChanges && props.onChange(e.target.value);\n              }}\n              onFocus={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(true);\n                }\n                props.onFocus?.();\n              }}\n              onBlur={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(false);\n                }\n                props.onChange(pendingValue);\n                props.onBlur?.(pendingValue);\n              }}\n              onKeyDown={onKeyDown}\n              style={{\n                width: props.width || '24vw',\n                paddingRight: focused && uncomitted ? 55 : '',\n              }}\n              className={props.className}\n              ref={inputRef}\n            />\n            {focused && uncomitted && <EnterHint>Enter</EnterHint>}\n            {focused &&\n              props.linkToPreview &&\n              (flattenGraphsEnabled ? (\n                <OpInfoWrap>\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n                    <Checkbox\n                      label=\"Flatten subgraphs\"\n                      checked={props.flattenGraphs ?? false}\n                      onChange={() => {\n                        props.setFlattenGraphs?.();\n                      }}\n                      format=\"switch\"\n                    />\n                    <Tooltip\n                      content=\"Flatten subgraphs to select ops within nested graphs\"\n                      placement=\"right\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                  {opCountInfo}\n                </OpInfoWrap>\n              ) : (\n                opCountInfo\n              ))}\n          </div>\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              icon={<Icon name=\"layers\" />}\n              rightIcon={<Icon name=\"cancel\" />}\n              onClick={() => props.onChange('*')}\n              intent=\"none\"\n            />\n          ) : (\n            <Popover\n              position=\"top\"\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                icon={<Icon name=\"layers\" />}\n                rightIcon={<Icon name=\"expand_less\" />}\n                intent=\"none\"\n              />\n            </Popover>\n          ))}\n      </Box>\n    );\n  }),\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst OpInfoWrap = styled.div`\n  width: 350px;\n  padding: 10px 16px 10px 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  position: absolute;\n  top: 100%;\n  margin-top: 2px;\n  font-size: 0.85rem;\n  background: ${Colors.White};\n  color: ${Colors.Gray600};\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n  left: 0;\n`;\n\nconst OpCountWrap = styled(OpInfoWrap)<{$hasWrap: boolean}>`\n  margin-top: ${(p) => (p.$hasWrap ? 0 : 2)}px;\n`;\n\nconst EnterHint = styled.div`\n  position: absolute;\n  right: 6px;\n  top: 5px;\n  border-radius: 5px;\n  border: 1px solid ${Colors.Gray500};\n  background: ${Colors.White};\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.Gray500};\n  padding: 2px 6px;\n`;\n","import * as React from 'react';\n\nimport {BaseButton} from './BaseButton';\nimport {JoinedButtons} from './Button';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Tooltip} from './Tooltip';\n\nexport type ButtonGroupItem<T> = {\n  id: T;\n  label?: React.ReactNode;\n  icon?: IconName;\n  tooltip?: string;\n};\n\ninterface Props<T> {\n  activeItems?: Set<T>;\n  buttons: ButtonGroupItem<T>[];\n  onClick: (id: T, e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const ButtonGroup = <T extends string | number>(props: Props<T>) => {\n  const {activeItems, buttons, onClick} = props;\n  return (\n    <JoinedButtons>\n      {buttons.map((button) => {\n        const {id, icon, label, tooltip} = button;\n        const isActive = activeItems?.has(id);\n        const buttonElement = (\n          <BaseButton\n            key={id}\n            fillColor={isActive ? Colors.Gray200 : Colors.White}\n            textColor={isActive ? Colors.Gray900 : Colors.Gray700}\n            icon={\n              icon ? <Icon name={icon} color={isActive ? Colors.Gray900 : Colors.Gray700} /> : null\n            }\n            label={label}\n            onClick={(e) => onClick(id, e)}\n          />\n        );\n\n        if (tooltip) {\n          return (\n            <Tooltip content={tooltip} position=\"top\" key={id}>\n              {buttonElement}\n            </Tooltip>\n          );\n        }\n\n        return buttonElement;\n      })}\n    </JoinedButtons>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Slider as BlueprintSlider,\n  MultiSlider as BlueprintMultiSlider,\n  SliderProps,\n  MultiSliderProps,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\n\nexport const Slider: React.FC<SliderProps & {fillColor?: string}> = ({\n  fillColor = Colors.Gray600,\n  ...rest\n}) => {\n  return <StyledSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nexport const MultiSlider: React.FC<\n  MultiSliderProps & {fillColor?: string; children: React.ReactNode}\n> & {\n  Handle: typeof BlueprintMultiSlider.Handle;\n} = ({fillColor = Colors.Gray600, ...rest}) => {\n  return <StyledMultiSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nMultiSlider.Handle = BlueprintMultiSlider.Handle;\n\nexport const SliderStyles = css<{$fillColor: string}>`\n  .bp4-slider-track {\n    height: 8px;\n    .bp4-slider-progress {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 0.2;\n      height: 8px;\n    }\n    .bp4-slider-progress.bp4-intent-primary {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 1;\n      height: 8px;\n    }\n  }\n  &.bp4-vertical .bp4-slider-track,\n  &.bp4-vertical .bp4-slider-track .bp4-slider-progress {\n    height: initial;\n    width: 8px;\n  }\n  .bp4-slider-handle {\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 2px solid ${Colors.Gray300};\n    background: ${Colors.White};\n    box-shadow: none;\n    &:hover {\n      border: 2px solid ${Colors.Gray400};\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n    }\n\n    .bp4-slider-label {\n      background: ${Colors.Gray900};\n      box-shadow: 0 1px 4px rgba(0,0,0,0.15)\n      padding: 4px 8px;\n    }\n  }\n`;\n\nconst StyledMultiSlider = styled(BlueprintMultiSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\nconst StyledSlider = styled(BlueprintSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {ButtonGroup} from './ButtonGroup';\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nconst DIVIDER_THICKNESS = 2;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode | null; // Note: pass null to hide / animate away the second panel\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size: _size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n    const firstSize = second ? _size : 100;\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const onClick = (id: string) => {\n    let size = 50;\n    if (id === 'first-pane') {\n      size = 100;\n    } else if (id === 'second-pane') {\n      size = 0;\n    }\n    container.current?.onChangeSize(size);\n  };\n\n  return (\n    <ButtonGroup\n      buttons={[\n        {\n          id: 'first-pane',\n          icon: axis === 'vertical' ? 'panel_show_top' : 'panel_show_left',\n          tooltip: axis === 'vertical' ? 'Show only top pane' : 'Show only left pane',\n        },\n        {\n          id: 'split',\n          icon: 'panel_show_both',\n          tooltip: 'Show both panes',\n        },\n        {\n          id: 'second-pane',\n          icon: axis === 'vertical' ? 'panel_show_bottom' : 'panel_show_right',\n          tooltip: axis === 'vertical' ? 'Show only bottom pane' : 'Show only right pane',\n        },\n      ]}\n      onClick={onClick}\n    />\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      active={open}\n      title=\"Toggle second pane\"\n      icon={\n        <Icon\n          name={\n            axis === 'horizontal'\n              ? open\n                ? 'panel_hide_right'\n                : 'panel_show_right'\n              : 'panel_show_bottom'\n          }\n        />\n      }\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\n// Note: -1px margins here let the divider cover the last 1px of the previous box, hiding\n// any scrollbar border it might have.\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-left: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-top: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  overflow: hidden;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nexport interface Viewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\ntype ContainerRef = {\n  element: HTMLDivElement;\n  __sized: boolean;\n};\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<ContainerRef>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      const container = ref.current;\n      if (container) {\n        const {element, __sized} = container;\n        if (!__sized && next.width !== 0 && initialOffset) {\n          const targetOffset = initialOffset(element);\n          element.scrollTop = targetOffset.top;\n          element.scrollLeft = targetOffset.left;\n          setOffset(targetOffset);\n          container.__sized = true;\n        }\n      }\n    };\n\n    const container = ref.current;\n    const {element} = container;\n\n    let resizeObserver: any;\n    if (element instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: any) => {\n          if (entries[0].target === element) {\n            onApplySize({width: element.clientWidth, height: element.clientHeight});\n          }\n        });\n        resizeObserver.observe(element);\n      } else {\n        if (process.env.NODE_ENV !== 'test') {\n          console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        }\n        onApplySize({width: element.clientWidth, height: element.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const element = ref.current?.element;\n\n    if (!element) {\n      return;\n    }\n\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(element.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(element.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      element.scrollTop = targetOffset.top;\n      element.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          element.scrollTop = v.top;\n          element.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: HTMLDivElement) => {\n      if (el === ref.current?.element) {\n        return;\n      }\n\n      ref.current = {\n        element: el,\n        __sized: false,\n      };\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as Viewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n"],"names":["GraphTraverser","items","itemNameMap","forEach","item","name","this","step","depth","results","next","traverse","Object","values","callback","inputs","input","dependsOn","d","itemNamed","solid","outputs","output","dependedBy","expansionDepthForClause","clause","includes","Number","MAX_SAFE_INTEGER","length","filterByQuery","query","all","applyingEmptyDefault","focus","traverser","Set","clauses","split","parts","exec","trim","parentsClause","itemName","descendentsClause","itemsMatching","filter","s","isPlannedDynamicStep","replace","startsWith","dynamicKeyWithoutIndex","test","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","Array","from","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","TOP_INSET","BOTTOM_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","mode","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","isDynamicStep","stepKey","endsWith","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","k","replacePlannedIndex","stepKeyWithIndex","match","buildLayout","params","nodes","boxes","g","some","i","find","o","map","node","key","state","undefined","children","x","y","root","width","roots","box","addChildren","deepen","child","parents","boxesByY","idx","push","changed","highestYParent","sort","a","b","onTargetY","r","parentX","willCross","willCauseCrossing","c","bottomY","keys","row","maxY","reduce","m","Math","max","markers","ensureSubtreeAfterParentInArray","parent","parentIdx","indexOf","boxIdx","splice","seen","added","out","dep","depNode","n","depBoxIdx","findIndex","depBox","TextColorForStates","IStepState","Colors","BackgroundColorForStates","boxStyleFor","context","metadata","startedPipelineAt","options","color","background","border","positionAndSplitBoxes","positionFor","ii","meta","steps","assign","attempts","runBoxes","run","runIdx","exitState","slice","adjustLayoutWithRunMetadata","layout","scale","nowMs","WeakMap","nextMarkers","nextBoxes","set","get","cloneLayout","xForMs","time","widthForMs","start","end","_box","earliestAllowedX","unstarted","visit","minXForUnstartedChildren","shift","positionUntimedBoxes","globalMarkers","entries","stepBox","_run","Error","interestingQueriesFor","errorsQuery","join","value","slowStepsQuery","rightmostCompletedBox","subsetTitleForRun","stepsTag","tags","t","DagsterTag","RunGroupPanel","runId","runStatusLastChangedAt","queryResult","useQuery","RUN_GROUP_PANEL_QUERY","variables","notifyOnNetworkStatusChange","data","refetch","useQueryRefreshAtInterval","FIFTEEN_SECONDS","React","group","runGroupOrError","__typename","Group","direction","spacing","padding","Icon","style","fontSize","ButtonLink","underline","onClick","showCustomAlert","title","body","message","runs","unsorted","startTime","pipelineName","RunGroupRun","to","selected","ThinLine","height","Box","top","status","flex","marginLeft","minWidth","display","justifyContent","RunTitle","RootTag","gql","PYTHON_ERROR_FRAGMENT","RUN_TIME_FRAGMENT","styled","Link","FontFamily","borderRadius","lineHeight","fontWeight","userSelect","GanttStatusPanel","selection","onClickStep","onDoubleClickStep","onHighlightStep","preparing","executing","errored","succeeded","renderStepItem","stepName","StepItem","onDoubleClick","onHover","isFinished","exitedAt","overflowY","startedProcessAt","EmptyNotice","collapsedByDefault","StepItemContainer","evt","onMouseEnter","onMouseLeave","Spinner","purpose","Tooltip","modifiers","preventOverflow","enabled","flip","position","content","StepStatusDot","StepLabel","Elapsed","formatElapsedTime","SidebarSection","props","useStateWithStorage","storedValue","open","setOpen","onToggle","CollapsingHeaderBar","SidebarTitleTextWrap","size","transform","isOpen","SidebarTitle","SectionHeader","SectionSmallHeader","SidebarSubhead","SectionItemContainer","LogLevel","DefaultLogLevels","Row","highlighted","level","bgcolorForLevel","StructuredContent","OpColumn","widths","ColumnWidthsContext","String","OpColumnContainer","p","OpColumnTooltipStyle","substr","JSON","stringify","fontFamily","left","timestampFormat","memoize","timezone","Intl","DateTimeFormat","navigator","language","hour","minute","second","hourCycle","timeZone","browserTimezone","fractionalSecondFormat","locale","NumberFormat","minimumFractionDigits","maximumFractionDigits","TimestampColumn","runStartTime","stepStartTime","location","useLocation","TimeContext","canShowTooltip","href","pathname","qs","focusedTime","runElapsedTime","formatElapsedTimeWithMsec","stepElapsedTime","TimestampColumnContainer","timestamp","canShow","dark","rows","placement","timeNumber","main","format","Date","fractionalSec","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","onChange","_","ColumnWidthsProvider","onWidthsChangedFromContext","columnWidths","window","localStorage","setItem","onWidthsChanged","setState","Provider","Header","isDragging","screenX","onMouseDown","document","addEventListener","onMouseMove","onMouseUp","onResize","handleSide","dir","removeEventListener","isDraggable","HeaderContainer","HeaderDragHandle","side","HeaderLabel","Headers","HeadersContainer","RunContext","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","UNKNOWN","EMPTY_RUN_METADATA","firstLogAt","mostRecentLogAt","extractLogCaptureStepsFromLegacySteps","stepKeys","logCaptureSteps","fileKey","fromTimestamp","ts","floor","stepStatusToStepState","StepEventStatus","SKIPPED","refineMarkerEvent","log","RunMetadataProvider","logs","runMetadata","endTime","stepStats","stepStat","transitions","attempt","marker","extractMetadataFromRun","loading","upsertMarker","f","unshift","upsertState","parseInt","min","RUNNING","markerEvent","markerStart","markerEnd","pid","externalUrl","PREPARING","operationResult","op","extractMetadataFromLogs","allNodes","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","METADATA_ENTRY_FRAGMENT","RunStats","stats","RUN_STATS_QUERY","RunStatsDetailsContainer","result","pipelineRunOrError","error","runPath","stepsSucceeded","stepsFailed","materializations","expectations","RunStatusWithStats","rest","interactionKind","hoverOpenDelay","RunStatusIndicator","RunStatusDot","pulse","inProgressStatuses","queuedStatuses","pulseAnimation","keyframes","css","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","NOT_STARTED","MANAGED","STARTED","STARTING","SUCCESS","FAILURE","CANCELING","CANCELED","SCHEDULED","RunStatusTag","intent","alignItems","gap","RunStatusTagWithStats","usePortal","TimestampDisplay","timeFormat","tooltipTimeFormat","userTimezone","mainString","timestampToString","unix","TabularNums","TimestampTooltip","defaultProps","DEFAULT_TIME_FORMAT","showSeconds","showTimezone","placeholderTextForItems","base","seed","placeholder","ranked","incount","sum","outcount","example","intentToStrokeColor","GraphQueryInput","ref","active","setActive","focused","setFocused","pendingValue","setPendingValue","inputRef","flattenGraphsEnabled","lastClause","prefix","lastElementName","suffix","suggestions","available","solidItem","isGraph","definition","lastElementLower","toLowerCase","matching","uniq","buildSuggestions","onConfirmSuggestion","suggestion","preceding","index","pos","text","nextIdx","nextText","current","OpSelectionWrapperDivRef","clickListener","event","OpSelectionWrapperDivElement","inputElement","target","Node","shouldWrapperGetFocus","contains","uncomitted","flattenGraphsFlag","flattenGraphs","opCountInfo","linkToPreview","OpCountWrap","$hasWrap","e","currentTarget","click","workspacePipelinePath","enforceFocus","popoverPosition","icon","preventDefault","stopPropagation","disabled","strokeColor","autoFocus","autoApplyChanges","onFocus","onBlur","onKeyDown","blur","ArrowDown","ArrowUp","paddingRight","className","EnterHint","OpInfoWrap","label","checked","setFlattenGraphs","presets","rightIcon","preset","prevProps","nextProps","isEqual","ButtonGroup","activeItems","buttons","button","id","tooltip","isActive","has","buttonElement","fillColor","textColor","Slider","StyledSlider","$fillColor","BlueprintMultiSlider","SliderStyles","BlueprintSlider","SplitPanelContainer","onChangeSize","identifier","getItem","isNaN","firstInitialPercent","resizing","firstMinSize","first","_size","axis","firstPaneStyles","flexShrink","firstSize","minHeight","Container","PanelDivider","onSetResizing","onMove","closest","parentRect","getBoundingClientRect","firstPanelPercent","clientX","clientY","Wrapper","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","container","SecondPanelToggle","prevSize","setPrevSize","initialIsOpen","horizontal","vertical","useViewport","offset","setOffset","setSize","initialOffset","measureRef","resizeObserver","onApplySize","element","__sized","targetOffset","scrollTop","scrollLeft","HTMLElement","clientWidth","clientHeight","observe","console","warn","disconnect","animation","onScroll","cancel","onMoveToViewport","animated","scrollWidth","scrollHeight","onDone","animate","v","done","setRef","el","viewport","containerProps"],"sourceRoot":""}