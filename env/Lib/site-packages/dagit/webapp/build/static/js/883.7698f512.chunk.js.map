{"version":3,"file":"static/js/883.7698f512.chunk.js","mappings":"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","sources":["../../core/src/app/browser.tsx","../../core/src/runs/AssetKeyTagCollection.tsx","../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/NavitationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunTags.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/runs/useJobAvailabilityErrorForRun.tsx","../../core/src/ui/AnchorButton.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../ui/src/components/CursorControls.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A hook that provides a mechanism for copying a string, triggered by user\n * behavior. If the Clipboard API is available, use it directly.\n *\n * The Clipboard can be undefined in an insecure context\n * (https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API), so we\n * also provide a fallback that uses an offscreen input and `execCommand` to\n * copy the contents. This is less ideal because it steals focus and is a DOM\n * hack, but it should still be effective enough for our needs.\n */\nexport const useCopyToClipboard = () => {\n  const clipboardAPI = navigator.clipboard;\n  const node = React.useRef<HTMLInputElement | null>(null);\n\n  React.useEffect(() => {\n    if (!clipboardAPI) {\n      node.current = document.createElement('input');\n      node.current.style.position = 'fixed';\n      node.current.style.top = '-10000px';\n      document.body.appendChild(node.current);\n    }\n\n    return () => {\n      node.current && document.body.removeChild(node.current);\n    };\n  }, [clipboardAPI]);\n\n  return React.useCallback(\n    (text: string) => {\n      if (clipboardAPI) {\n        clipboardAPI.writeText(text);\n      } else if (node.current) {\n        node.current.value = text;\n        node.current.select();\n        document.execCommand('copy');\n      }\n    },\n    [clipboardAPI],\n  );\n};\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Table,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey, tokenForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\n\nconst MAX_ASSET_TAGS = 3;\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  modalTitle?: string;\n  clickableTags?: boolean;\n}> = React.memo(({assetKeys, clickableTags, modalTitle = 'Assets in Run'}) => {\n  const [showMore, setShowMore] = React.useState(false);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  const assetCount = assetKeys.length;\n  const displayed = assetCount <= MAX_ASSET_TAGS ? assetKeys : [];\n  const hidden = assetCount - displayed.length;\n\n  if (clickableTags) {\n    return (\n      <>\n        {displayed.map((assetKey, ii) => (\n          <Link to={assetDetailsPathForKey(assetKey)} key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          </Link>\n        ))}\n        {hidden > 0 && (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Tag intent=\"none\" icon=\"asset\">\n              {hidden} assets\n            </Tag>\n          </ButtonLink>\n        )}\n        <Dialog\n          title={modalTitle}\n          onClose={() => setShowMore(false)}\n          style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n          isOpen={showMore}\n        >\n          {showMore ? (\n            <Box\n              padding={{bottom: 12}}\n              border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n              style={{overflowY: 'auto'}}\n              background={Colors.White}\n            >\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Asset key</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {assetKeys.map((assetKey, ii) => (\n                    <tr key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n                      <td>\n                        <Link\n                          to={assetDetailsPathForKey(assetKey)}\n                          key={tokenForAssetKey(assetKey)}\n                        >\n                          {displayNameForAssetKey(assetKey)}\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Box>\n          ) : null}\n          <DialogFooter>\n            <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n              OK\n            </Button>\n          </DialogFooter>\n        </Dialog>\n      </>\n    );\n  }\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, wrap: 'wrap', alignItems: 'center'}}>\n      <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n      {`${displayed.map(displayNameForAssetKey).join(', ')}\n      ${\n        hidden > 0 && displayed.length > 0\n          ? ` + ${hidden} more`\n          : hidden > 0\n          ? `${hidden} assets`\n          : ''\n      }`}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\n\nimport {DagsterTag, RunTag, TagType} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\n\n// Sort these tags to the start of the list.\nconst priorityTagSet = new Set([\n  DagsterTag.ScheduleName as string,\n  DagsterTag.SensorName as string,\n  DagsterTag.Backfill as string,\n]);\n\nconst renamedTags = {\n  [DagsterTag.SolidSelection]: DagsterTag.OpSelection,\n};\n\nconst canAddTagToFilter = (key: string) => {\n  return key !== DagsterTag.SolidSelection && key !== DagsterTag.OpSelection;\n};\n\nexport const RunTags: React.FC<{\n  tags: TagType[];\n  mode: string | null;\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({tags, onAddTag, mode}) => {\n  const copy = useCopyToClipboard();\n\n  const copyAction = React.useMemo(\n    () => ({\n      label: 'Copy tag',\n      onClick: (tag: TagType) => {\n        copy(`${tag.key}:${tag.value}`);\n        SharedToaster.show({intent: 'success', message: 'Copied tag!'});\n      },\n    }),\n    [copy],\n  );\n\n  const addToFilterAction = React.useMemo(\n    () =>\n      onAddTag\n        ? {\n            label: 'Add tag to filter',\n            onClick: (tag: TagType) => {\n              onAddTag({token: 'tag', value: `${tag.key}=${tag.value}`});\n            },\n          }\n        : null,\n    [onAddTag],\n  );\n\n  const actionsForTag = (tag: TagType) => {\n    const list = [copyAction];\n    if (addToFilterAction && canAddTagToFilter(tag.key)) {\n      list.push(addToFilterAction);\n    }\n    return list.filter((item) => !!item);\n  };\n\n  const displayedTags = React.useMemo(() => {\n    const priority = [];\n    const others = [];\n    const copiedTags = tags.map(({key, value}) => ({key, value}));\n    for (const tag of copiedTags) {\n      const {key} = tag;\n      if (renamedTags.hasOwnProperty(key)) {\n        tag.key = renamedTags[key as keyof typeof renamedTags];\n      }\n\n      if (\n        tag.value.startsWith(__ASSET_JOB_PREFIX) &&\n        (key === DagsterTag.PartitionSet || key === DagsterTag.StepSelection)\n      ) {\n        continue;\n      } else if (priorityTagSet.has(key)) {\n        priority.push(tag);\n      } else {\n        others.push(tag);\n      }\n    }\n    return [...priority, ...others];\n  }, [tags]);\n\n  if (!tags.length) {\n    return null;\n  }\n\n  return (\n    <Box flex={{direction: 'row', wrap: 'wrap', gap: 4}}>\n      {mode ? <RunTag tag={{key: 'mode', value: mode}} /> : null}\n      {displayedTags.map((tag, idx) => (\n        <RunTag tag={tag} key={idx} actions={actionsForTag(tag)} />\n      ))}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {TerminateMutation, TerminateMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\nconst refineToError = (data: TerminateMutation | null | undefined) => {\n  if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n    throw new ErrorEvent('Not an error!');\n  }\n  return data?.terminatePipelineExecution;\n};\n\ntype Error = ReturnType<typeof refineToError> | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<TerminateMutation, TerminateMutationVariables>(\n    TERMINATE_MUTATION,\n  );\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {Group, IconName} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {buildRepoAddress, buildRepoPathForHuman} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {\n  TargetRunWithParentSnapshot,\n  useRepositoryForRunWithParentSnapshot,\n} from '../workspace/useRepositoryForRun';\n\nexport const useJobAvailabilityErrorForRun = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} => {\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the job. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The loaded version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      const originRepoName = run.repositoryOrigin\n        ? repoAddressAsHumanString(\n            buildRepoAddress(\n              run.repositoryOrigin.repositoryName,\n              run.repositoryOrigin.repositoryLocationName,\n            ),\n          )\n        : null;\n\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from ${\n              originRepoName || 'a different code location'\n            }.`}</div>\n            {originRepoName ? (\n              <div>\n                Original definition in: <strong>{originRepoName}</strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the job name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The job \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this job. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in your definitions.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load definitions for ${buildRepoPathForHuman(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {\n  intentToFillColor,\n  intentToStrokeColor,\n  intentToTextColor,\n  StyledButton,\n  StyledButtonText,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ninterface AnchorButtonProps\n  extends Omit<\n      React.ComponentProps<typeof BlueprintAnchorButton>,\n      'loading' | 'onClick' | 'onFocus' | 'type'\n    >,\n    LinkProps {\n  label?: React.ReactNode;\n}\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={intentToFillColor(intent, outlined)}\n        $strokeColor={intentToStrokeColor(intent, outlined)}\n        $textColor={intentToTextColor(intent, outlined)}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","import {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin' | 'pipeline-name-only';\n};\n\ntype MatchTypeWithSnapshot = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\nexport interface TargetRunWithParentSnapshot extends TargetRun {\n  parentPipelineSnapshotId?: string | null;\n}\n\ninterface TargetRun {\n  pipelineName: string;\n  repositoryOrigin: null | {\n    repositoryLocationName: string;\n    repositoryName: string;\n  };\n  pipelineSnapshotId: string | null;\n}\n\nconst repoOriginMatchForRun = (options: DagsterRepoOption[], run: TargetRun | null | undefined) => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n  // Try to match the pipeline name within the specified origin, if possible.\n  const origin = run.repositoryOrigin;\n\n  if (!origin) {\n    return null;\n  }\n\n  const location = origin?.repositoryLocationName;\n  const name = origin?.repositoryName;\n\n  const match = options.find(\n    (option) => option.repository.name === name && option.repositoryLocation.name === location,\n  );\n\n  // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n  return match && repoContainsPipeline(match, pipelineName) ? match : null;\n};\n\nconst jobNameMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRun | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // There is no origin repo. Find any repos that might contain a matching pipeline name.\n  const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n  return possibleMatches.length ? possibleMatches : null;\n};\n\nconst snapshotMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRunWithParentSnapshot | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // When jobs are subsetted (with an opSelection or assetSelection), only their\n  // parentPipelineSnapshotId (the id of the pipelineSnapshot that they were subsetted from) will\n  // be found in the repository, so look for that instead.\n  const snapshotId = run.parentPipelineSnapshotId ?? run.pipelineSnapshotId;\n\n  // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n  if (pipelineName && snapshotId) {\n    const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n    if (snapshotMatches.length) {\n      return snapshotMatches;\n    }\n  }\n\n  return null;\n};\n\n/**\n * The simple case. Find the repo match for this job name, or the first available\n * repo match for that job name.\n */\nexport const useRepositoryForRunWithoutSnapshot = (\n  run: TargetRun | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n  const repoMatch = repoOriginMatchForRun(options, run);\n  if (repoMatch) {\n    return {match: repoMatch, type: 'origin'};\n  }\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n  if (jobNameMatches && jobNameMatches.length) {\n    return {match: jobNameMatches[0], type: 'pipeline-name-only'};\n  }\n  return null;\n};\n\n/**\n * The more complex case, where a parent snapshot has been fetched. Here, use a\n * repo match and try to pair it with the snapshot ID. If that fails, use any repo\n * match, then any snapshot ID match, then any job name match.\n *\n * Retrieving a parent snapshot ID is expensive, so this should only be used for\n * one run at a time.\n */\nexport const useRepositoryForRunWithParentSnapshot = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): MatchTypeWithSnapshot | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = repoOriginMatchForRun(options, run);\n  const snapshotMatches = snapshotMatchesForRun(options, run);\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches && snapshotMatches.length) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (jobNameMatches && jobNameMatches.length) {\n    return {match: jobNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n"],"names":["useCopyToClipboard","clipboardAPI","navigator","clipboard","node","React","current","document","createElement","style","position","top","body","appendChild","removeChild","text","writeText","value","select","execCommand","AssetKeyTagCollection","assetKeys","clickableTags","modalTitle","showMore","setShowMore","length","assetCount","displayed","hidden","map","assetKey","ii","to","assetDetailsPathForKey","intent","interactive","icon","displayNameForAssetKey","tokenForAssetKey","onClick","title","onClose","minWidth","maxWidth","maxHeight","isOpen","padding","bottom","border","side","color","Colors","width","overflowY","background","autoFocus","flex","direction","gap","wrap","alignItems","name","size","join","refineToError","data","deletePipelineRun","__typename","Error","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","action","type","id","error","DeletionDialog","props","onComplete","onTerminateInstead","selectedRuns","state","dispatch","runIDs","Object","keys","count","terminatableCount","filter","useMutation","DELETE_MUTATION","destroy","mutate","runList","runId","variables","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","spacing","Math","max","animate","message","progressContent","errorCount","successCount","slice","completionContent","disabled","buttons","NavigationBlock","handler","e","preventDefault","returnValue","window","addEventListener","removeEventListener","priorityTagSet","Set","DagsterTag","renamedTags","RunTags","tags","onAddTag","mode","copy","copyAction","label","tag","key","SharedToaster","addToFilterAction","token","actionsForTag","list","push","item","displayedTags","priority","others","copiedTags","hasOwnProperty","startsWith","__ASSET_JOB_PREFIX","has","idx","actions","terminatePipelineExecution","ErrorEvent","mustForce","some","termination","terminationDialogReducer","checked","TerminationDialog","TERMINATE_MUTATION","terminate","policy","TerminateRunPolicy","terminatePolicy","onToggleForce","event","target","showCheckbox","onChange","display","margin","useJobAvailabilityErrorForRun","run","repoMatch","useRepositoryForRunWithParentSnapshot","pipelineSnapshotId","tooltip","pipelineName","matchType","originRepoName","repositoryOrigin","repoAddressAsHumanString","buildRepoAddress","repositoryName","repositoryLocationName","repoForRun","repoLocationForRun","buildRepoPathForHuman","AnchorButton","ref","children","outlined","rightIcon","rest","S","as","Link","$fillColor","intentToFillColor","$strokeColor","intentToStrokeColor","$textColor","intentToTextColor","displayName","repoOriginMatchForRun","options","origin","location","match","find","option","repository","repositoryLocation","repoContainsPipeline","jobNameMatchesForRun","possibleMatches","findRepoContainingPipeline","useRepositoryForRunWithoutSnapshot","useRepositoryOptions","jobNameMatches","snapshotMatches","snapshotId","parentPipelineSnapshotId","snapshotMatchesForRun","repoAndSnapshotMatch","repoOption","CursorPaginationControls","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","CursorControlsContainer","CursorHistoryControls","className","styled"],"sourceRoot":""}