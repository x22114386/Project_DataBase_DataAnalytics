{"version":3,"file":"static/js/288.e225a90a.chunk.js","mappings":"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","sources":["../../core/src/app/browser.tsx","../../core/src/workspace/CodeLocationMenu.tsx","../../core/src/workspace/RepositoryCountTags.tsx","../../core/src/workspace/CodeLocationRowSet.tsx","../../core/src/workspace/RepositoryLocationsList.tsx","../../core/src/instance/CodeLocationsPage.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../core/src/workspace/ReloadAllButton.tsx","../../ui/src/components/NonIdealState.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A hook that provides a mechanism for copying a string, triggered by user\n * behavior. If the Clipboard API is available, use it directly.\n *\n * The Clipboard can be undefined in an insecure context\n * (https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API), so we\n * also provide a fallback that uses an offscreen input and `execCommand` to\n * copy the contents. This is less ideal because it steals focus and is a DOM\n * hack, but it should still be effective enough for our needs.\n */\nexport const useCopyToClipboard = () => {\n  const clipboardAPI = navigator.clipboard;\n  const node = React.useRef<HTMLInputElement | null>(null);\n\n  React.useEffect(() => {\n    if (!clipboardAPI) {\n      node.current = document.createElement('input');\n      node.current.style.position = 'fixed';\n      node.current.style.top = '-10000px';\n      document.body.appendChild(node.current);\n    }\n\n    return () => {\n      node.current && document.body.removeChild(node.current);\n    };\n  }, [clipboardAPI]);\n\n  return React.useCallback(\n    (text: string) => {\n      if (clipboardAPI) {\n        clipboardAPI.writeText(text);\n      } else if (node.current) {\n        node.current.value = text;\n        node.current.select();\n        document.execCommand('copy');\n      }\n    },\n    [clipboardAPI],\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledReadOnlyCodeMirror,\n  Table,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu: React.FC<{locationNode: WorkspaceRepositoryLocationNode}> = ({\n  locationNode,\n}) => {\n  const [configIsOpen, setConfigIsOpen] = React.useState(false);\n  const [libsIsOpen, setLibsIsOpen] = React.useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}> = ({isOpen, setIsOpen, metadata}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}> = ({isOpen, setIsOpen, libraries}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Libray</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig: React.FC<{\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}> = ({displayMetadata}) => {\n  const yamlString = React.useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledReadOnlyCodeMirror\n      value={yamlString}\n      options={{lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\n\nexport const RepositoryCountTags: React.FC<{\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}> = ({repo, repoAddress}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet: React.FC<Props> = ({locationNode}) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.Gray500}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName: React.FC<{metadata: WorkspaceDisplayMetadataFragment[]}> = ({metadata}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = React.useCallback(() => {\n    copy(value);\n    SharedToaster.show({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.Gray700};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    color: ${Colors.Gray700};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile: React.FC<{metadata: WorkspaceDisplayMetadataFragment[]}> = ({\n  metadata,\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.Gray700, fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nconst LocationStatus: React.FC<{\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}> = (props) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  const reloadFn = React.useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nconst ReloadButton: React.FC<{location: string}> = ({location}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, NonIdealState, Spinner, Table} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {CodeLocationRowSet} from './CodeLocationRowSet';\nimport {WorkspaceContext} from './WorkspaceContext';\n\nexport const RepositoryLocationsList = () => {\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  if (loading && !locationEntries.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading...</div>\n      </Box>\n    );\n  }\n\n  if (!locationEntries.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Status</th>\n          <th>Updated</th>\n          <th>Definitions</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {locationEntries.map((location) => (\n          <CodeLocationRowSet key={location.name} locationNode={location} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\n\nexport const CodeLocationsPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  // Consider each loaded repository to be a \"code location\".\n  const entryCount = React.useMemo(() => {\n    let count = 0;\n    locationEntries.forEach((entry) => {\n      if (!entry.locationOrLoadError || entry.locationOrLoadError?.__typename === 'PythonError') {\n        count += 1;\n      } else {\n        count += entry.locationOrLoadError.repositories.length;\n      }\n    });\n    return count;\n  }, [locationEntries]);\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        <ReloadAllButton />\n      </Box>\n      <RepositoryLocationsList />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["useCopyToClipboard","clipboardAPI","navigator","clipboard","node","React","current","document","createElement","style","position","top","body","appendChild","removeChild","text","writeText","value","select","execCommand","CodeLocationMenu","locationNode","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","locationOrLoadError","__typename","dagsterLibraryVersions","Menu","icon","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","Popover","content","Button","Icon","name","CodeLocationConfigDialog","metadata","displayMetadata","Dialog","title","onClose","width","CodeLocationConfig","topBorder","intent","Table","map","library","version","yamlString","kvPairs","reduce","accum","item","key","yaml","options","lineNumbers","mode","theme","RepositoryCountTags","repo","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","filter","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Box","flex","direction","gap","alignItems","Tooltip","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","styled","Link","CodeLocationRowSet","maxWidth","color","Colors","MiddleTruncate","LocationStatus","location","locationOrError","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","ReloadButton","repositories","sort","a","b","localeCompare","repository","buildRepoAddress","allMetadata","fontWeight","repoAddressAsHumanString","ImageName","ModuleOrPackageOrFile","copy","imageKV","find","SharedToaster","message","ImageNameBox","display","fontSize","props","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","minimal","ButtonLink","error","onDismiss","onTryReload","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","RepositoryLocationsList","WorkspaceContext","locationEntries","padding","horizontal","Spinner","purpose","vertical","NonIdealState","description","CodeLocationsPage","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","entryCount","count","forEach","entry","PageHeader","tabs","InstanceTabs","tab","justifyContent","height","id","ReloadAllButton","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","modifiers","offset","enabled","WorkspaceStatus","placeholder","codeLocations","type","fillColor","refreshState","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","bottom","QueryRefresh","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","rest","containerProps","getTabA11yProps","getTabContent","titleText","undefined","tabCSS","label","useUnscopedPermissions","canReloadWorkspace","permissions","disabledReasons","reloadFnForWorkspace","errorLocationId","canEscapeKeyClose","canOutsideClickClose","action","shrinkable","singleContentElement","Boolean","background","margin","borderRadius","size"],"sourceRoot":""}