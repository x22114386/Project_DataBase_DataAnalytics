{"version":3,"file":"static/js/285.4950a340.chunk.js","mappings":"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","sources":["../../core/src/instance/useCanSeeConfig.tsx","../../core/src/runs/RunListTabs.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/runs/RunsPageHeader.tsx","../../core/src/runs/RunsRoot.tsx","../../core/src/ui/Loading.tsx","../../core/src/ui/StickyTableContainer.tsx","../../core/src/ui/TabLink.tsx","../../ui/src/components/Alert.tsx","../../ui/src/components/Page.tsx","../../../node_modules/lodash/_arrayAggregator.js","../../../node_modules/lodash/_baseAggregator.js","../../../node_modules/lodash/_createAggregator.js","../../../node_modules/lodash/isEqual.js","../../../node_modules/lodash/partition.js"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Tabs, TokenizingFieldValue} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {RunStatus} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {TabLink} from '../ui/TabLink';\n\nimport {doneStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsPathWithFilters, useQueryPersistedRunFilters} from './RunsFilterInput';\n\nconst getDocumentTitle = (selected: ReturnType<typeof useSelectedRunsTab>) => {\n  switch (selected) {\n    case 'all':\n      return 'Runs | All runs';\n    case 'done':\n      return 'Runs | Done';\n    case 'in-progress':\n      return 'Runs | In progress';\n    case 'queued':\n      return 'Runs | Queued';\n    case 'scheduled':\n      return 'Runs | Scheduled';\n    default:\n      return 'Runs';\n  }\n};\n\ninterface Props {\n  queuedCount: number | null;\n  inProgressCount: number | null;\n}\n\nexport const RunListTabs: React.FC<Props> = React.memo(({queuedCount, inProgressCount}) => {\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  useDocumentTitle(getDocumentTitle(selectedTab));\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  return (\n    <Tabs selectedTabId={selectedTab} id=\"run-tabs\">\n      <TabLink title=\"All runs\" to={urlForStatus([])} id=\"all\" />\n      <TabLink\n        title=\"Queued\"\n        count={queuedCount ?? 'indeterminate'}\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n      />\n      <TabLink\n        title=\"In progress\"\n        count={inProgressCount ?? 'indeterminate'}\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n      />\n      <TabLink title=\"Done\" to={urlForStatus(Array.from(doneStatuses))} id=\"done\" />\n      <TabLink title=\"Scheduled\" to=\"/runs/scheduled\" id=\"scheduled\" />\n    </Tabs>\n  );\n});\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/runs/scheduled') {\n    return 'scheduled';\n  }\n  if (pathname === '/overview/backfills') {\n    return 'backfills';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(doneStatuses, statusTokens)) {\n    return 'done';\n  }\n  return 'all';\n};\n\nexport const RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        runId\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.MANAGED:\n    case RunStatus.CANCELING:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.STARTING:\n      return 'none';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n      return 'danger';\n    case RunStatus.STARTED:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {useQuery} from '@apollo/client';\nimport {PageHeader, Heading, Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  QueryRefreshState,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\n\nimport {RunListTabs, RUN_TABS_COUNT_QUERY} from './RunListTabs';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsFilterForSearchTokens, useQueryPersistedRunFilters} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunListTabs.types';\n\ninterface Props {\n  refreshStates: QueryRefreshState[];\n}\n\nexport const RunsPageHeader = (props: Props) => {\n  const {refreshStates} = props;\n\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n\n  const runCountResult = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(\n    RUN_TABS_COUNT_QUERY,\n    {\n      variables: {\n        queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n        inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n      },\n    },\n  );\n\n  const {data: countData} = runCountResult;\n  const {queuedCount, inProgressCount} = React.useMemo(() => {\n    return {\n      queuedCount:\n        countData?.queuedCount?.__typename === 'Runs' ? countData.queuedCount.count : null,\n      inProgressCount:\n        countData?.inProgressCount?.__typename === 'Runs' ? countData.inProgressCount.count : null,\n    };\n  }, [countData]);\n\n  const countRefreshState = useQueryRefreshAtInterval(runCountResult, FIFTEEN_SECONDS);\n\n  const refreshState = useMergedRefresh(countRefreshState, ...refreshStates);\n\n  return (\n    <PageHeader\n      title={<Heading>Runs</Heading>}\n      tabs={\n        <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n          <RunListTabs queuedCount={queuedCount} inProgressCount={inProgressCount} />\n          <Box padding={{bottom: 8}}>\n            <QueryRefreshCountdown refreshState={refreshState} />\n          </Box>\n        </Box>\n      }\n    />\n  );\n};\n","import {ApolloError, gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  Colors,\n  CursorHistoryControls,\n  NonIdealState,\n  Page,\n  Tag,\n  tokenToString,\n} from '@dagster-io/ui';\nimport partition from 'lodash/partition';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {InstancePageContext} from '../instance/InstancePageContext';\nimport {useCanSeeConfig} from '../instance/useCanSeeConfig';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\n\nimport {useSelectedRunsTab} from './RunListTabs';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilterInput,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n} from './RunsFilterInput';\nimport {RunsPageHeader} from './RunsPageHeader';\nimport {\n  QueueDaemonStatusQuery,\n  QueueDaemonStatusQueryVariables,\n  RunsRootQuery,\n  RunsRootQueryVariables,\n} from './types/RunsRoot.types';\nimport {useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nexport const RunsRoot = () => {\n  useTrackPageView();\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const canSeeConfig = useCanSeeConfig();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const currentTab = useSelectedRunsTab(filterTokens);\n  const staticStatusTags = currentTab !== 'all';\n  const [statusTokens, nonStatusTokens] = partition(\n    filterTokens,\n    (token) => token.token === 'status',\n  );\n\n  const setFilterTokensWithStatus = React.useCallback(\n    (tokens: RunFilterToken[]) => {\n      if (staticStatusTags) {\n        setFilterTokens([...statusTokens, ...tokens]);\n      } else {\n        setFilterTokens(tokens);\n      }\n    },\n    [setFilterTokens, staticStatusTags, statusTokens],\n  );\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!nonStatusTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokensWithStatus([...nonStatusTokens, token]);\n      }\n    },\n    [nonStatusTokens, setFilterTokensWithStatus],\n  );\n\n  const enabledFilters = React.useMemo(() => {\n    const filters: RunFilterTokenType[] = ['tag', 'snapshotId', 'id', 'job', 'pipeline'];\n\n    if (!staticStatusTags) {\n      filters.push('status');\n    }\n\n    return filters;\n  }, [staticStatusTags]);\n\n  const mutableTokens = React.useMemo(() => {\n    if (staticStatusTags) {\n      return filterTokens.filter((token) => token.token !== 'status');\n    }\n    return filterTokens;\n  }, [filterTokens, staticStatusTags]);\n\n  return (\n    <Page>\n      <RunsPageHeader refreshStates={[refreshState]} />\n      {currentTab === 'queued' && canSeeConfig ? (\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          padding={{horizontal: 24, vertical: 16}}\n          border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n        >\n          <Alert\n            intent=\"info\"\n            title={<Link to=\"/config#run_coordinator\">View queue configuration</Link>}\n          />\n          <QueueDaemonAlert />\n        </Box>\n      ) : null}\n      <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n        <Loading\n          queryResult={queryResult}\n          allowStaleData\n          renderError={(error: ApolloError) => {\n            // In this case, a 400 is most likely due to invalid run filters, which are a GraphQL\n            // validation error but surfaced as a 400.\n            const badRequest = !!(\n              error?.networkError &&\n              'statusCode' in error.networkError &&\n              error.networkError.statusCode === 400\n            );\n            return (\n              <Box\n                flex={{direction: 'column', gap: 32}}\n                padding={{vertical: 8, left: 24, right: 12}}\n              >\n                <RunsFilterInput\n                  tokens={mutableTokens}\n                  onChange={setFilterTokensWithStatus}\n                  loading={queryResult.loading}\n                  enabledFilters={enabledFilters}\n                />\n                <NonIdealState\n                  icon=\"warning\"\n                  title={badRequest ? 'Invalid run filters' : 'Unexpected error'}\n                  description={\n                    badRequest\n                      ? 'The specified run filters are not valid. Please check the filters and try again.'\n                      : 'An unexpected error occurred. Check the console for details.'\n                  }\n                />\n              </Box>\n            );\n          }}\n        >\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onAddTag={onAddTag}\n                    filter={filter}\n                    actionBarComponents={\n                      <Box flex={{direction: 'column', gap: 8}}>\n                        {currentTab !== 'all' ? (\n                          <Box flex={{direction: 'row', gap: 8}}>\n                            {filterTokens\n                              .filter((token) => token.token === 'status')\n                              .map(({token, value}) => (\n                                <Tag key={`${token}:${value}`}>{`${token}:${value}`}</Tag>\n                              ))}\n                          </Box>\n                        ) : null}\n                        <RunsFilterInput\n                          tokens={mutableTokens}\n                          onChange={setFilterTokensWithStatus}\n                          loading={queryResult.loading}\n                          enabledFilters={enabledFilters}\n                        />\n                      </Box>\n                    }\n                  />\n                </StickyTableContainer>\n                {pipelineRunsOrError.results.length > 0 ? (\n                  <div style={{marginTop: '16px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </RunsQueryRefetchContext.Provider>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunsRoot;\n\nconst RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery, QueueDaemonStatusQueryVariables>(\n    QUEUE_DAEMON_STATUS_QUERY,\n  );\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/health\">{pageTitle}</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n    if (!error.networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\ninterface Props {\n  $top: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top}) => $top}px;\n    background-color: ${Colors.White};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${Colors.KeylineGray};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n"],"names":["useCanSeeConfig","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","RunListTabs","React","queuedCount","inProgressCount","useQueryPersistedRunFilters","filterTokens","selectedTab","useSelectedRunsTab","useDocumentTitle","selected","getDocumentTitle","urlForStatus","statuses","tokensMinusStatus","filter","token","statusTokens","map","status","value","runsPathWithFilters","selectedTabId","id","title","to","count","Array","from","queuedStatuses","inProgressStatuses","doneStatuses","pathname","useLocation","Set","isEqual","RUN_TABS_COUNT_QUERY","RunStats","runId","stats","RUN_STATS_QUERY","variables","loading","RunStatsDetailsContainer","padding","flex","justifyContent","purpose","result","pipelineRunOrError","__typename","error","runPath","stepsSucceeded","stepsFailed","materializations","expectations","PYTHON_ERROR_FRAGMENT","styled","RunStatusWithStats","rest","position","interactionKind","content","hoverOpenDelay","RunStatusIndicator","size","RunStatusDot","pulse","pulseAnimation","keyframes","css","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","Colors","NOT_STARTED","MANAGED","STARTED","STARTING","SUCCESS","FAILURE","CANCELING","CANCELED","SCHEDULED","RunStatusTag","props","intent","direction","alignItems","gap","RunStatusTagWithStats","usePortal","RunsPageHeader","refreshStates","runsFilterForSearchTokens","runCountResult","queuedFilter","inProgressFilter","countData","countRefreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","refreshState","useMergedRefresh","tabs","bottom","RunsRoot","useTrackPageView","setFilterTokens","canSeeConfig","useCursorPaginatedQuery","nextCursorForResult","runs","pipelineRunsOrError","results","PAGE_SIZE","getResultArray","query","RUNS_ROOT_QUERY","pageSize","queryResult","paginationProps","currentTab","staticStatusTags","partition","nonStatusTokens","setFilterTokensWithStatus","tokens","onAddTag","tokenAsString","tokenToString","some","enabledFilters","filters","push","mutableTokens","horizontal","vertical","border","side","width","color","QueueDaemonAlert","refetch","allowStaleData","renderError","badRequest","networkError","statusCode","left","right","onChange","icon","description","message","$top","slice","actionBarComponents","length","style","marginTop","RUN_TABLE_RUN_FRAGMENT","QUEUE_DAEMON_STATUS_QUERY","pageTitle","InstancePageContext","daemonHealth","daemonStatus","required","healthy","Loading","children","blankLoading","setBlankLoading","isLoading","Object","keys","timer","setTimeout","clearTimeout","LoadingSpinner","isPage","grow","undefined","height","defaultProps","StickyTableContainer","TabLink","disabled","containerProps","getTabA11yProps","getTabContent","titleText","tabCSS","Alert","onClose","backgroundColor","borderColor","iconColor","textColor","AlertContainer","background","$borderColor","$textColor","spacing","name","AlertTitle","AlertDescription","ButtonWrapper","onClick","Box","Page","module","exports","array","setter","iteratee","accumulator","index","baseEach","require","collection","key","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","baseIsEqual","other","createAggregator"],"sourceRoot":""}