{"version":3,"file":"static/js/881.8734739e.chunk.js","mappings":"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","sources":["../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/toGraphQueryItems.tsx","../../core/src/runs/CellTruncationProvider.tsx","../../core/src/runs/LogsRowStructuredContent.tsx","../../core/src/runs/LogsRow.tsx","../../core/src/runs/LogsScrollingTable.tsx","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunDetails.tsx","../../core/src/runs/RunFragments.tsx","../../core/src/runs/getRunFilterProviders.ts","../../core/src/runs/logNodeLevel.tsx","../../core/src/runs/useJobReExecution.tsx"],"sourcesContent":["import {\n  Box,\n  Checkbox,\n  Colors,\n  FontFamily,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerWrapper,\n  SplitPanelContainer,\n  useViewport,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {withMiddleTruncation} from '../app/Util';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {CancelRunButton} from '../runs/RunActionButtons';\nimport {\n  EMPTY_RUN_METADATA,\n  IRunMetadataDict,\n  IStepMetadata,\n  IStepState,\n} from '../runs/RunMetadataProvider';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {StepSelection} from '../runs/StepSelection';\nimport {RunFragment} from '../runs/types/RunFragments.types';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\n\nimport {\n  BOTTOM_INSET,\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n  TOP_INSET,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  BuildLayoutParams,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                updateOptions({hideWaiting: e.target.checked})\n              }\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  // When the pipeline is running we want the graph to be steadily moving, even if logs\n  // aren't arriving. To achieve this we determine an update interval based on the scale\n  // and advance a \"now\" value that is used as the currnet time when adjusting the layout\n  // to account for run metadata below.\n\n  // Because renders can happen \"out of band\" of our update interval, we set a timer for\n  // \"time until the next interval after the current nowMs\".\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket) {\n      return;\n    }\n\n    if (metadata?.exitedAt) {\n      if (nowMs !== metadata.exitedAt) {\n        setNowMs(metadata.exitedAt);\n      }\n      return;\n    }\n\n    const renderInterval = Math.max(CSS_DURATION, 2 / scale);\n    const now = Date.now();\n\n    const timeUntilIntervalElasped = renderInterval - (now - nowMs);\n    const timeout = setTimeout(() => setNowMs(now), timeUntilIntervalElasped);\n    return () => clearTimeout(timeout);\n  }, [scale, nowMs, lostWebsocket, metadata]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => TOP_INSET + b.y * BOX_HEIGHT + BOTTOM_INSET)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 70, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.Yellow500}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <Icon name=\"warning\" color={Colors.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <FilterInputsBackgroundBox flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <GraphQueryInput\n            items={props.graph}\n            value={props.selection.query}\n            placeholder=\"Type a step subset\"\n            onChange={props.onUpdateQuery}\n            presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n            className={selection.keys.length > 0 ? 'has-step' : ''}\n          />\n          <Checkbox\n            checked={options.hideUnselectedSteps}\n            label=\"Hide unselected steps\"\n            onChange={props.onChange}\n          />\n        </FilterInputsBackgroundBox>\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FC<GanttChartViewportContentsProps> = (props) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.node.name}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.state === IStepState.RUNNING ? <Spinner purpose=\"body-text\" /> : undefined}\n        {truncatedBoxLabel(box)}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: TOP_INSET + a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: TOP_INSET + a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = TOP_INSET + (straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY);\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? TOP_INSET + b.y * BOX_HEIGHT + bCenterY\n    : TOP_INSET + b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.Gray700 : Colors.Gray300\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY - LINE_SIZE / 2,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\nfunction truncatedBoxLabel(box: GanttChartBox) {\n  if (box.width <= BOX_SHOW_LABEL_WIDTH_CUTOFF) {\n    return undefined;\n  }\n\n  // Note: The constants here must be in sync with the CSS immediately below\n  const totalPadding = 7 + (box.state === IStepState.RUNNING ? 16 : 0);\n  const maxLength = (box.width - totalPadding) / 6.2;\n\n  return withMiddleTruncation(box.node.name, {maxLength});\n}\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.White};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 12px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    /* Note: padding + font changes may also impact truncatedBoxLabel */\n\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 3px;\n    padding-right: 1px;\n    border: 1px solid transparent;\n    border-radius: 2px;\n    white-space: nowrap;\n    font-family: ${FontFamily.monospace};\n    font-size: 12.5px;\n    font-weight: 700;\n    line-height: 15px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.Gray900};\n      box-shadow: 0 0 0 2px ${Colors.Yellow500};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.Gray800};\n    }\n    &.dynamic {\n      filter: brightness(125%);\n    }\n\n    ${SpinnerWrapper} {\n      display: inline-block;\n      vertical-align: text-bottom;\n      padding-right: 4px;\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.Yellow700};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst FilterInputsBackgroundBox = styled(Box)`\n  background: radial-gradient(${Colors.Gray50} 0%, rgba(255, 255, 255, 0) 100%);\n  padding: 15px 15px 0px 15px;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <div style={{margin: 'auto', marginTop: 100}}>\n          <Spinner purpose=\"section\" />\n        </div>\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({run}: {run: RunFragment}) => (\n  <GanttChartContainer>\n    <OptionsContainer style={{justifyContent: 'flex-end'}}>\n      <CancelRunButton run={run} />\n    </OptionsContainer>\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"arrow_forward\"\n          title=\"Run queued\"\n          description=\"This run is queued for execution and will start soon.\"\n          action={\n            <Link to={runsPathWithFilters([{token: 'status', value: 'QUEUED'}])}>\n              View queued runs\n            </Link>\n          }\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={run.id}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {ButtonGroup, ButtonGroupItem} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FC<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => {\n  const buttons: ButtonGroupItem<GanttChartMode>[] = [\n    {id: GanttChartMode.FLAT, icon: 'gantt_flat', tooltip: 'Flat view'},\n    {id: GanttChartMode.WATERFALL, icon: 'gantt_waterfall', tooltip: 'Waterfall view'},\n  ];\n\n  if (!hideTimedMode) {\n    buttons.push({\n      id: GanttChartMode.WATERFALL_TIMED,\n      icon: 'timer',\n      tooltip: 'Timed view',\n    });\n  }\n\n  const activeItems = React.useMemo(() => new Set([value]), [value]);\n  const onClick = React.useCallback((id: GanttChartMode) => onChange(id), [onChange]);\n\n  return <ButtonGroup activeItems={activeItems} buttons={buttons} onClick={onClick} />;\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst msToMinuteLabel = (ms: number) => `${Math.round(ms / 1000 / 60)}m`;\nconst msToSecondLabel = (ms: number) => `${(ms / 1000).toFixed(0)}s`;\nconst msToSubsecondLabel = (ms: number) => `${(ms / 1000).toFixed(1)}s`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_LABEL_WIDTH = 56;\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: msToSubsecondLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactChild[] = [];\n  const lines: React.ReactChild[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > 80);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n    const firstTickX = Math.floor(viewport.left / pxPerTick) * pxPerTick;\n\n    for (let x = firstTickX; x < firstTickX + viewport.width; x += pxPerTick) {\n      if (x - viewport.left < 10) {\n        continue;\n      }\n      const ms = x / pxPerMs;\n      const key = `${ms.toFixed(2)}`;\n      const label = tickLabels(ms);\n      lines.push(<div className=\"line\" key={key} style={{left: x, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: x - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key=\"highlight-duration\"\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0] - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1] - highlightedMs[0]) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1] - highlightedMs[0])}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {msToSubsecondLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs + (idx === 0 ? -1 : 0), transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TICKS_ROW_HEIGHT = 32;\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 7px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: ${TICKS_ROW_HEIGHT}px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n  }\n  & .tick.duration {\n    color: ${Colors.Gray500};\n    background: ${Colors.Gray100};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    height: ${TICKS_ROW_HEIGHT + 2}px;\n    background: ${Colors.Gray900};\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #f0f0f0;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 2px solid ${Colors.Gray900};\n    z-index: 1111;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: ${Colors.Gray50};\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: ${TICKS_ROW_HEIGHT}px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.White};\n  display: flex;\n  color: ${Colors.Gray500};\n  font-size: 13px;\n  font-family: ${FontFamily.monospace};\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: ${TICKS_ROW_HEIGHT}px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {Colors, SliderStyles} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FC<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <ZoomSliderContainer\n      $fillColor={Colors.Gray600}\n      className=\"bp4-slider bp4-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp4-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp4-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp4-slider-track\">\n        <div className=\"bp4-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp4-slider-progress bp4-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp4-slider-axis\" />\n      <span\n        className=\"bp4-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </ZoomSliderContainer>\n  );\n});\n\nconst ZoomSliderContainer = styled.div`\n  ${SliderStyles}\n`;\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\nconst validateSavedMode = (storedValue: string) =>\n  storedValue === GanttChartMode.FLAT ||\n  storedValue === GanttChartMode.WATERFALL ||\n  storedValue === GanttChartMode.WATERFALL_TIMED\n    ? storedValue\n    : GanttChartMode.WATERFALL_TIMED;\n\nexport const useGanttChartMode = () => {\n  return useStateWithStorage(GANTT_CHART_MODE_KEY, validateSavedMode);\n};\n","import {Colors, CursorControlsContainer} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\n  min-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 5px 12px 5px 24px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.White};\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  z-index: 3;\n\n  ${CursorControlsContainer} {\n    margin-top: 0;\n    gap: 8px;\n\n    @media (max-width: 1100px) {\n      & .hideable-button-text {\n        display: none;\n      }\n      & div[role='img'] {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const OptionsDivider = styled.div`\n  width: 30px;\n  height: 25px;\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 30px;\n`;\n","import {gql} from '@apollo/client';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {StepKind} from '../graphql/types';\nimport {IStepMetadata, IStepState} from '../runs/RunMetadataProvider';\n\nimport {invocationsOfPlannedDynamicStep, replacePlannedIndex} from './DynamicStepSupport';\nimport {ExecutionPlanToGraphFragment} from './types/toGraphQueryItems.types';\n\n/**\n * Converts a Run execution plan into a tree of `GraphQueryItem` items that\n * can be used as the input to the \"solid query\" filtering algorithm or rendered\n * into the Gannt visualization or the SVG DAG visualization. The idea\n * is that this data structure is generic, but it's really a fake solid tree.\n *\n * Pass runtimeStepKeys to duplicate dynamic step sub-trees for each occurrence of\n * the step key found at runtime.\n */\n\nexport const toGraphQueryItems = (\n  plan: ExecutionPlanToGraphFragment,\n  runtimeStepMetadata: {[key: string]: IStepMetadata},\n) => {\n  // Step 1: Find unresolved steps in the initial plan and build a mapping\n  // of their unresolved names to their resolved step keys, eg:\n  // \"multiply_input[*]\" => [\"multiply_input[1]\", \"multiply_input[2]\"]\n  const keyExpansionMap: {[key: string]: string[]} = {};\n  const runtimeStepKeys = Object.keys(runtimeStepMetadata);\n\n  for (const step of plan.steps) {\n    if (step.kind === StepKind.UNRESOLVED_MAPPED) {\n      const keys = invocationsOfPlannedDynamicStep(step.key, runtimeStepKeys);\n\n      // If the upstream steps have NOT succeeded, it's expected that there are zero runtime step keys\n      // matching the dynamic step. Until upstream steps run, we should show the [*] placeholder item\n      // in the runtime graph (rather than just showing nothing.)\n      const invocationsHappened = step.inputs.every((i) =>\n        i.dependsOn.every((s) => IStepState.SUCCEEDED === runtimeStepMetadata[s.key]?.state),\n      );\n      if (!invocationsHappened && keys.length === 0) {\n        keyExpansionMap[step.key] = [step.key];\n        continue;\n      }\n      // The order matters here: add the planned dynamic step at the end, so when displaying the gantt\n      // chart, we can ignore planned dynamic step if any of its invocation exists (i.e. hide the\n      // unresolved node if any resolved node exists).\n      keyExpansionMap[step.key] = [...keys, step.key];\n    }\n  }\n\n  // Step 2: Create a graph node for each resolved step without any inputs or outputs.\n  const nodeTable: {[key: string]: GraphQueryItem} = {};\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      nodeTable[key] = {\n        name: key,\n        inputs: [],\n        outputs: [],\n      };\n    }\n  }\n\n  // Step 3: For each step in the original plan, visit each input and create inputs/outputs\n  // in our Gantt Node result set.\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      for (const input of step.inputs) {\n        // Add the input to our node in the result set\n        const nodeInput: GraphQueryItem['inputs'][0] = {dependsOn: []};\n        nodeTable[key].inputs.push(nodeInput);\n\n        // For each upstream step in the plan, map it to upstream nodes in the runtime graph\n        // and attach inputs / outputs to our result graph.\n        for (const upstream of input.dependsOn) {\n          let upstreamKeys = [];\n          if (step.kind === StepKind.UNRESOLVED_COLLECT) {\n            // If we are a collect, there may be N runtime keys fanning in to this input,\n            // fetch the keys if they exist or fall back to the sigle upstream step case.\n            upstreamKeys = keyExpansionMap[upstream.key] || [upstream.key];\n          } else {\n            // If the input was coming from an unresolved mapped step and WE are not a collector,\n            // assume our own dynamic key index applies to the upstream mapped step as well.\n            upstreamKeys = [\n              upstream.kind === StepKind.UNRESOLVED_MAPPED\n                ? replacePlannedIndex(upstream.key, key)\n                : upstream.key,\n            ];\n          }\n\n          for (const upstreamKey of upstreamKeys) {\n            if (!nodeTable[upstreamKey]) {\n              continue;\n            }\n            nodeInput.dependsOn.push({solid: {name: upstreamKey}});\n            let upstreamOutput: GraphQueryItem['outputs'][0] = nodeTable[upstreamKey].outputs[0];\n            if (!upstreamOutput) {\n              upstreamOutput = {dependedBy: []};\n              nodeTable[upstreamKey].outputs.push(upstreamOutput);\n            }\n            upstreamOutput.dependedBy.push({\n              solid: {name: key},\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return Object.values(nodeTable);\n};\n\nexport const EXECUTION_PLAN_TO_GRAPH_FRAGMENT = gql`\n  fragment ExecutionPlanToGraphFragment on ExecutionPlan {\n    steps {\n      key\n      kind\n      inputs {\n        dependsOn {\n          key\n          kind\n        }\n      }\n    }\n  }\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nconst OverflowFade = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  user-select: none;\n  pointer-events: none;\n  background: linear-gradient(to bottom, rgba(245, 248, 250, 0) 0%, rgba(245, 248, 250, 255) 100%);\n`;\n\nconst OverflowButtonContainer = styled.div`\n  position: absolute;\n  bottom: 6px;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst OverflowButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  font-size: 12px;\n  font-weight: 500;\n  background: rgba(100, 100, 100, 0.7);\n  border-radius: 4px;\n  line-height: 32px;\n  padding: 0 12px;\n  color: ${Colors.White};\n  &:hover {\n    background: rgba(100, 100, 100, 0.85);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:active {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport class CellTruncationProvider extends React.Component<\n  {\n    children: React.ReactNode;\n    style: React.CSSProperties;\n    onExpand?: () => void;\n    forceExpandability?: boolean;\n  },\n  {isOverflowing: boolean}\n> {\n  state = {\n    isOverflowing: false,\n  };\n\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    this.detectOverflow();\n  }\n\n  componentDidUpdate() {\n    this.detectOverflow();\n  }\n\n  detectOverflow() {\n    const child =\n      this.contentContainerRef.current && this.contentContainerRef.current.firstElementChild;\n\n    if (!child) {\n      return;\n    }\n\n    const isOverflowing =\n      typeof this.props.style.height === 'number' && child.scrollHeight > this.props.style.height;\n    if (isOverflowing !== this.state.isOverflowing) {\n      this.setState({isOverflowing});\n    }\n  }\n\n  defaultExpand() {\n    const message =\n      this.contentContainerRef.current && this.contentContainerRef.current.textContent;\n    message &&\n      showCustomAlert({\n        body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n      });\n  }\n\n  onView = () => {\n    const {onExpand} = this.props;\n    onExpand ? onExpand() : this.defaultExpand();\n  };\n\n  render() {\n    const style = {...this.props.style, overflow: 'hidden'};\n\n    return (\n      <div style={style}>\n        <div ref={this.contentContainerRef}>{this.props.children}</div>\n        {(this.state.isOverflowing || this.props.forceExpandability) && (\n          <>\n            <OverflowFade />\n            <OverflowButtonContainer>\n              <OverflowButton onClick={this.onView}>View full message</OverflowButton>\n            </OverflowButtonContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent} from '@blueprintjs/core';\nimport {Box, Colors, Tag} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment.types';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\nimport {ErrorSource, DagsterEventType} from '../graphql/types';\nimport {\n  LogRowStructuredContentTable,\n  MetadataEntries,\n  MetadataEntryLink,\n} from '../metadata/MetadataEntry';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntry.types';\n\nimport {EventTypeColumn} from './LogsRowComponents';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {LogsRowStructuredFragment} from './types/LogsRow.types';\n\ninterface IStructuredContentProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n}\n\nexport const LogsRowStructuredContent: React.FC<IStructuredContentProps> = ({node, metadata}) => {\n  const location = useLocation();\n  const eventType = node.eventType as string;\n  switch (node.__typename) {\n    case 'ExecutionStepFailureEvent':\n      return (\n        <FailureContent\n          eventType={eventType}\n          error={node.error}\n          metadataEntries={node?.failureMetadata?.metadataEntries}\n          errorSource={node.errorSource}\n          message={node.error ? undefined : node.message}\n        />\n      );\n\n    case 'ExecutionStepUpForRetryEvent':\n      return <StepUpForRetryContent error={node.error} message={node.message} />;\n\n    case 'ExecutionStepStartEvent':\n      if (!node.stepKey || metadata.logCaptureSteps) {\n        return <DefaultContent message={node.message} eventType={eventType} />;\n      } else {\n        const currentQuery = qs.parse(location.search);\n        const updatedQuery = {\n          ...currentQuery,\n          logType: 'stdout',\n          logs: `query:${node.stepKey}`,\n          selection: node.stepKey,\n        };\n        const href = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n        return (\n          <DefaultContent message={node.message} eventType={eventType}>\n            <LogRowStructuredContentTable\n              rows={[\n                {\n                  label: 'step_logs',\n                  item: (\n                    <Link to={href} style={{color: 'inherit'}}>\n                      View Raw Step Output\n                    </Link>\n                  ),\n                },\n              ]}\n            />\n          </DefaultContent>\n        );\n      }\n    case 'ExecutionStepSkippedEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(173, 185, 152, 0.3)\"\n        />\n      );\n\n    case 'ExecutionStepRestartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n\n    case 'ExecutionStepSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'ExecutionStepInputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.typeCheck.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'ExecutionStepOutputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <>\n            <MetadataEntries entries={node.typeCheck.metadataEntries} />\n            <MetadataEntries entries={node.metadataEntries} />\n          </>\n        </DefaultContent>\n      );\n    case 'StepExpectationResultEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventIntent={node.expectationResult.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.expectationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'MaterializationEvent':\n      return (\n        <AssetMetadataContent\n          message={node.message}\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'ObservationEvent':\n      return (\n        <AssetMetadataContent\n          message=\"\"\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'AssetMaterializationPlannedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'ObjectStoreOperationEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.operationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HandledOutputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LoadedInputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HookCompletedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookSkippedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookErroredEvent':\n      return <FailureContent eventType={eventType} error={node.error} />;\n    case 'AlertStartEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertSuccessEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertFailureEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"warning\" />;\n    case 'ResourceInitFailureEvent':\n    case 'RunFailureEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"danger\" />;\n    case 'RunSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'RunStartEvent':\n    case 'RunEnqueuedEvent':\n    case 'RunDequeuedEvent':\n    case 'RunStartingEvent':\n    case 'RunCancelingEvent':\n    case 'ResourceInitStartedEvent':\n    case 'ResourceInitSuccessEvent':\n    case 'StepWorkerStartedEvent':\n    case 'StepWorkerStartingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'RunCanceledEvent':\n      return <FailureContent message={node.message} eventType={eventType} />;\n    case 'EngineEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(27,164,206,0.2)\"\n        >\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LogMessageEvent':\n      return <DefaultContent message={node.message} />;\n    case 'LogsCapturedEvent':\n      const currentQuery = qs.parse(location.search, {ignoreQueryPrefix: true});\n      const updatedQuery = {...currentQuery, logType: 'stdout', logFileKey: node.stepKey};\n      const rawLogsUrl = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n      const rawLogsLink = (\n        <Link to={rawLogsUrl} style={{color: 'inherit'}}>\n          View stdout / stderr\n        </Link>\n      );\n      const rows = node.stepKey\n        ? [\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ]\n        : [\n            {\n              label: 'step_keys',\n              item: <>{JSON.stringify(node.stepKeys)}</>,\n            },\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ];\n      return (\n        <DefaultContent eventType={eventType} message={node.message}>\n          <LogRowStructuredContentTable rows={rows} />\n        </DefaultContent>\n      );\n    default:\n      // This allows us to check that the switch is exhaustive because the union type should\n      // have been narrowed following each successive case to `never` at this point.\n      return assertUnreachable(node);\n  }\n};\n\n// Structured Content Renderers\n\nconst DefaultContent: React.FC<{\n  message: string;\n  eventType?: string;\n  eventColor?: string;\n  eventIntent?: Intent;\n  metadataEntries?: MetadataEntryFragment[];\n  children?: React.ReactElement;\n}> = ({message, eventType, eventColor, eventIntent, children}) => {\n  return (\n    <>\n      <EventTypeColumn>\n        {eventType && (\n          <Tag\n            intent={eventIntent}\n            style={\n              eventColor\n                ? {\n                    fontSize: '0.9em',\n                    color: 'black',\n                    background: eventColor,\n                  }\n                : {\n                    fontSize: '0.9em',\n                  }\n            }\n          >\n            {eventTypeToDisplayType(eventType)}\n          </Tag>\n        )}\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {message}\n        {children}\n      </Box>\n    </>\n  );\n};\n\nconst FailureContent: React.FC<{\n  message?: string;\n  eventType: string;\n  error?: PythonErrorFragment | null;\n  errorSource?: ErrorSource | null;\n  metadataEntries?: MetadataEntryFragment[];\n}> = ({message, error, errorSource, eventType, metadataEntries}) => {\n  let contextMessage = null;\n  let errorMessage = null;\n  let errorStack = null;\n  let errorCause = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n\n    // omit the outer stack for user code errors with a cause\n    // as the outer stack is just framework code\n    if (\n      error.stack.length &&\n      !(errorSource === ErrorSource.USER_CODE_ERROR && error.errorChain.length)\n    ) {\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    }\n\n    if (error.errorChain.length) {\n      errorCause = error.errorChain.map((chainLink, index) => (\n        <React.Fragment key={index}>\n          {chainLink.isExplicitLink\n            ? `The above exception was caused by the following exception:\\n`\n            : `The above exception occurred during handling of the following exception:\\n`}\n          <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n          {chainLink.error.stack.length ? (\n            <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n          ) : null}\n        </React.Fragment>\n      ));\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"danger\">\n          {eventTypeToDisplayType(eventType)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        <MetadataEntries entries={metadataEntries} />\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst StepUpForRetryContent: React.FC<{\n  message?: string;\n  error?: PythonErrorFragment | null;\n}> = ({message, error}) => {\n  let contextMessage = null;\n  let errorCause = null;\n  let errorMessage = null;\n  let errorStack = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    // If no cause, this was a `raise RetryRequest` inside the op. Show the trace for the main error.\n    if (!error.errorChain.length) {\n      errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    } else {\n      // If there is a cause, this was a different exception. Show that instead.\n      errorCause = (\n        <>\n          {error.errorChain.map((chainLink, index) => (\n            <React.Fragment key={index}>\n              {index === 0\n                ? `The retry request was caused by the following exception:\\n`\n                : `The above exception was caused by the following exception:\\n`}\n              <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n              <span\n                style={{color: Colors.Red500}}\n              >{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n            </React.Fragment>\n          ))}\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"warning\">\n          {eventTypeToDisplayType(DagsterEventType.STEP_UP_FOR_RETRY)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst AssetMetadataContent: React.FC<{\n  message: string;\n  assetKey: AssetKey | null;\n  metadataEntries: MetadataEntryFragment[];\n  eventType: string;\n  timestamp: string;\n}> = ({message, assetKey, metadataEntries, eventType, timestamp}) => {\n  if (!assetKey) {\n    return (\n      <DefaultContent message={message} eventType={eventType}>\n        <MetadataEntries entries={metadataEntries} />\n      </DefaultContent>\n    );\n  }\n\n  const to = assetDetailsPathForKey(assetKey, {asOf: timestamp});\n\n  const assetDashboardLink = (\n    <span style={{marginLeft: 10}}>\n      [<MetadataEntryLink to={to}>View Asset</MetadataEntryLink>]\n    </span>\n  );\n\n  return (\n    <DefaultContent message={message} eventType={eventType}>\n      <>\n        <LogRowStructuredContentTable\n          styles={metadataEntries?.length ? {paddingBottom: 0} : {}}\n          rows={[\n            {\n              label: 'asset_key',\n              item: (\n                <>\n                  {displayNameForAssetKey(assetKey)}\n                  {assetDashboardLink}\n                </>\n              ),\n            },\n          ]}\n        />\n        <MetadataEntries entries={metadataEntries} />\n      </>\n    </DefaultContent>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {setHighlightedGanttChartTime} from '../gantt/GanttChart';\nimport {LogLevel} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {CellTruncationProvider} from './CellTruncationProvider';\nimport {\n  EventTypeColumn,\n  Row,\n  OpColumn,\n  StructuredContent,\n  TimestampColumn,\n} from './LogsRowComponents';\nimport {LogsRowStructuredContent} from './LogsRowStructuredContent';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {LogsRowStructuredFragment, LogsRowUnstructuredFragment} from './types/LogsRow.types';\n\ninterface StructuredProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\ninterface StructuredState {\n  expanded: boolean;\n}\n\nexport class Structured extends React.Component<StructuredProps, StructuredState> {\n  onExpand = () => {\n    const {node, metadata} = this.props;\n\n    if (node.__typename === 'ExecutionStepFailureEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo\n            error={node.error ? node.error : node}\n            failureMetadata={node.failureMetadata}\n            errorSource={node.errorSource}\n          />\n        ),\n      });\n    } else if (node.__typename === 'ExecutionStepUpForRetryEvent') {\n      showCustomAlert({\n        title: 'Step Retry',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else if (\n      (node.__typename === 'EngineEvent' && node.error) ||\n      (node.__typename === 'RunFailureEvent' && node.error) ||\n      node.__typename === 'HookErroredEvent' ||\n      node.__typename === 'ResourceInitFailureEvent'\n    ) {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else {\n      showCustomAlert({\n        title: node.stepKey || 'Info',\n        body: (\n          <StructuredContent>\n            <LogsRowStructuredContent node={node} metadata={metadata} />\n          </StructuredContent>\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <StructuredMemoizedContent\n          node={this.props.node}\n          metadata={this.props.metadata}\n          highlighted={this.props.highlighted}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_STRUCTURED_FRAGMENT = gql`\n  fragment LogsRowStructuredFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      eventType\n      timestamp\n      level\n      stepKey\n    }\n    ... on DisplayableEvent {\n      label\n      description\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ErrorEvent {\n      error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on MaterializationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ObservationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ExecutionStepFailureEvent {\n      errorSource\n      failureMetadata {\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepInputEvent {\n      inputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepOutputEvent {\n      outputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on StepExpectationResultEvent {\n      expectationResult {\n        success\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on HandledOutputEvent {\n      outputName\n      managerKey\n    }\n    ... on LoadedInputEvent {\n      inputName\n      managerKey\n      upstreamOutputName\n      upstreamStepKey\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      externalUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst StructuredMemoizedContent: React.FC<{\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, metadata, highlighted}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={LogLevel.INFO}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={'timestamp' in node ? node.timestamp : null}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={'stepKey' in node && node.stepKey} />\n      <StructuredContent>\n        <LogsRowStructuredContent node={node} metadata={metadata} />\n      </StructuredContent>\n    </Row>\n  );\n});\n\nStructuredMemoizedContent.displayName = 'StructuredMemoizedContent';\n\ninterface UnstructuredProps {\n  node: LogsRowUnstructuredFragment;\n  style: React.CSSProperties;\n  highlighted: boolean;\n  metadata: IRunMetadataDict;\n}\n\nexport class Unstructured extends React.Component<UnstructuredProps> {\n  onExpand = () => {\n    showCustomAlert({\n      title: 'Log',\n      body: <div style={{whiteSpace: 'pre-wrap'}}>{this.props.node.message}</div>,\n    });\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <UnstructuredMemoizedContent\n          node={this.props.node}\n          highlighted={this.props.highlighted}\n          metadata={this.props.metadata}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_UNSTRUCTURED_FRAGMENT = gql`\n  fragment LogsRowUnstructuredFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n  }\n`;\n\nconst UnstructuredMemoizedContent: React.FC<{\n  node: LogsRowUnstructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, highlighted, metadata}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={node.level}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={node.timestamp}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={node.stepKey} />\n      <EventTypeColumn>\n        <span style={{marginLeft: 8}}>{node.level}</span>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {node.message}\n      </Box>\n    </Row>\n  );\n});\n\nUnstructuredMemoizedContent.displayName = 'UnstructuredMemoizedContent';\n","import {gql} from '@apollo/client';\nimport {Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {CellMeasurer, CellMeasurerCache, List, ListRowProps, ScrollParams} from 'react-virtualized';\nimport styled from 'styled-components/macro';\n\nimport {LogFilter, LogsProviderLogs} from './LogsProvider';\nimport {\n  LOGS_ROW_STRUCTURED_FRAGMENT,\n  LOGS_ROW_UNSTRUCTURED_FRAGMENT,\n  Structured,\n  Unstructured,\n} from './LogsRow';\nimport {ColumnWidthsProvider, Headers} from './LogsScrollingTableHeader';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {logNodeLevel} from './logNodeLevel';\nimport {RunDagsterRunEventFragment} from './types/RunFragments.types';\n\nconst LOGS_PADDING_BOTTOM = 50;\n\ninterface ILogsScrollingTableProps {\n  logs: LogsProviderLogs;\n  filter: LogFilter;\n  filterStepKeys: string[];\n\n  // We use this string to know whether the changes to `nodes` require us to\n  // re-layout the entire table. Appending new rows can be done very fast, but\n  // removing some rows requires the whole list be \"reflowed\" again. Checking\n  // `nodes` for equality doesn't let us optimize for the append- case.\n  filterKey: string;\n  metadata: IRunMetadataDict;\n}\n\ninterface ILogsScrollingTableSizedProps {\n  width: number;\n  height: number;\n\n  filteredNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n  textMatchNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n\n  filterKey: string;\n  loading: boolean;\n  focusedTime: number;\n  metadata: IRunMetadataDict;\n}\n\nfunction filterLogs(logs: LogsProviderLogs, filter: LogFilter, filterStepKeys: string[]) {\n  const filteredNodes = logs.allNodes.filter((node) => {\n    // These events are used to determine which assets a run will materialize and are not intended\n    // to be displayed in Dagit. Pagination is offset based, so we remove these logs client-side.\n    if (node.__typename === 'AssetMaterializationPlannedEvent') {\n      return false;\n    }\n    const l = logNodeLevel(node);\n    if (!filter.levels[l]) {\n      return false;\n    }\n    if (filter.sinceTime && Number(node.timestamp) < filter.sinceTime) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasTextFilter = !!(filter.logQuery.length && filter.logQuery[0].value !== '');\n\n  const textMatchNodes = hasTextFilter\n    ? filteredNodes.filter((node) => {\n        return (\n          filter.logQuery.length > 0 &&\n          filter.logQuery.every((f) => {\n            if (f.token === 'query') {\n              return node.stepKey && filterStepKeys.includes(node.stepKey);\n            }\n            if (f.token === 'step') {\n              return node.stepKey && node.stepKey === f.value;\n            }\n            if (f.token === 'type') {\n              return node.eventType && f.value === eventTypeToDisplayType(node.eventType);\n            }\n            return node.message.toLowerCase().includes(f.value.toLowerCase());\n          })\n        );\n      })\n    : [];\n\n  return {\n    filteredNodes: hasTextFilter && filter.hideNonMatches ? textMatchNodes : filteredNodes,\n    textMatchNodes,\n  };\n}\n\nexport const LogsScrollingTable: React.FC<ILogsScrollingTableProps> = (props) => {\n  const {filterKey, filterStepKeys, metadata, filter, logs} = props;\n  const table = React.useRef<LogsScrollingTableSized>(null);\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => table.current && table.current.didResize()}>\n      <Headers />\n      <div style={{flex: 1, minHeight: 0, marginTop: -1}}>\n        <AutoSizer>\n          {({width, height}) => (\n            <LogsScrollingTableSized\n              width={width}\n              height={height}\n              ref={table}\n              filterKey={filterKey}\n              loading={logs.loading}\n              metadata={metadata}\n              focusedTime={filter.focusedTime}\n              {...filterLogs(logs, filter, filterStepKeys)}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT = gql`\n  fragment LogsScrollingTableMessageFragment on DagsterRunEvent {\n    __typename\n    ...LogsRowStructuredFragment\n    ...LogsRowUnstructuredFragment\n  }\n\n  ${LOGS_ROW_STRUCTURED_FRAGMENT}\n  ${LOGS_ROW_UNSTRUCTURED_FRAGMENT}\n`;\n\nclass LogsScrollingTableSized extends React.Component<ILogsScrollingTableSizedProps> {\n  list = React.createRef<List>();\n\n  get listEl() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = this.list.current && ReactDOM.findDOMNode(this.list.current);\n    if (!(el instanceof HTMLElement)) {\n      return null;\n    }\n    return el;\n  }\n\n  cache = new CellMeasurerCache({\n    defaultHeight: 30,\n    fixedWidth: true,\n    keyMapper: (rowIndex) =>\n      this.props.filteredNodes ? this.props.filteredNodes[rowIndex].clientsideKey : '',\n  });\n\n  isAtBottomOrZero = true;\n  scrollToBottomObserver: MutationObserver | null = null;\n\n  componentDidMount() {\n    this.attachScrollToBottomObserver();\n    if (this.props.focusedTime) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ILogsScrollingTableSizedProps) {\n    if (!this.list.current) {\n      return;\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.didResize();\n    }\n    if (this.props.filterKey !== prevProps.filterKey) {\n      this.list.current.recomputeGridSize();\n    }\n\n    if (\n      this.props.focusedTime &&\n      this.props.filteredNodes?.length !== prevProps.filteredNodes?.length\n    ) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollToBottomObserver) {\n      this.scrollToBottomObserver.disconnect();\n    }\n  }\n\n  didResize() {\n    this.cache.clearAll();\n    this.forceUpdate();\n  }\n\n  attachScrollToBottomObserver() {\n    const el = this.listEl;\n    if (!el) {\n      console.warn(`No container, LogsScrollingTable must render listEl`);\n      return;\n    }\n\n    let lastHeight: string | null = null;\n\n    this.scrollToBottomObserver = new MutationObserver(() => {\n      const rowgroupEl = el.querySelector('[role=rowgroup]') as HTMLElement;\n      if (!rowgroupEl) {\n        lastHeight = null;\n        return;\n      }\n      if (rowgroupEl.style.height === lastHeight) {\n        return;\n      }\n      if (!this.isAtBottomOrZero) {\n        return;\n      }\n\n      lastHeight = rowgroupEl.style.height;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n    });\n\n    this.scrollToBottomObserver.observe(el, {\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  onScroll = ({scrollTop, scrollHeight, clientHeight}: ScrollParams) => {\n    const atTopAndStarting = scrollTop === 0 && scrollHeight <= clientHeight;\n\n    // Note: The distance to the bottom can go negative if you scroll into the padding at the bottom of the list.\n    // react-virtualized seems to be faking these numbers (they're different than what you get if you inspect the el)\n    const distanceToBottom = scrollHeight - clientHeight - scrollTop;\n    const atBottom = distanceToBottom < 5;\n\n    this.isAtBottomOrZero = atTopAndStarting || atBottom;\n  };\n\n  scrollToTime = (ms: number) => {\n    if (!this.props.filteredNodes || !this.list.current) {\n      return;\n    }\n\n    // Stop the table from attempting to return to the bottom-of-feed\n    // if more logs arrive.\n    this.isAtBottomOrZero = false;\n\n    // Find the row immediately at or after the provided timestamp\n    const target: {index: number; alignment: 'center'} = {\n      index: this.props.filteredNodes.findIndex((n) => Number(n.timestamp) >= ms),\n      alignment: 'center',\n    };\n    if (target.index === -1) {\n      target.index = this.props.filteredNodes.length - 1;\n    }\n\n    // Move to the offset. For some reason, this takes multiple iterations but not multiple renders.\n    // It seems react-virtualized may be using default row height for rows more than X rows away and\n    // the number gets more accurate as we scroll, which is very annoying.\n    let offset = 0;\n    let iterations = 0;\n    while (offset !== this.list.current.getOffsetForRow(target)) {\n      offset = this.list.current.getOffsetForRow(target);\n      this.list.current.scrollToPosition(offset);\n      iterations += 1;\n      if (iterations > 20) {\n        break;\n      }\n    }\n  };\n\n  rowRenderer = ({parent, index, style}: ListRowProps) => {\n    if (!this.props.filteredNodes) {\n      return;\n    }\n    const node = this.props.filteredNodes[index];\n    const focusedTimeMatch = Number(node.timestamp) === this.props.focusedTime;\n    const textMatch = !!this.props.textMatchNodes?.includes(node);\n\n    const metadata = this.props.metadata;\n    if (!node) {\n      return <span />;\n    }\n    const isLastRow = index === this.props.filteredNodes.length - 1;\n    const lastRowStyles = isLastRow\n      ? {\n          borderBottom: `1px solid ${Colors.Gray100}`,\n        }\n      : {};\n\n    return (\n      <CellMeasurer cache={this.cache} index={index} parent={parent} key={node.clientsideKey}>\n        {node.__typename === 'LogMessageEvent' ? (\n          <Unstructured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        ) : (\n          <Structured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  noContentRenderer = () => {\n    if (this.props.filteredNodes) {\n      return <NonIdealState icon=\"no-results\" title=\"No logs to display\" />;\n    }\n    return <span />;\n  };\n\n  render() {\n    const {filteredNodes, height, loading, width} = this.props;\n    return (\n      <div>\n        {loading ? (\n          <ListEmptyState>\n            <NonIdealState icon=\"spinner\" title=\"Fetching logs...\" />\n          </ListEmptyState>\n        ) : null}\n        <List\n          ref={this.list}\n          deferredMeasurementCache={this.cache}\n          rowCount={filteredNodes?.length || 0}\n          noContentRenderer={this.noContentRenderer}\n          rowHeight={this.cache.rowHeight}\n          rowRenderer={this.rowRenderer}\n          width={width}\n          height={height}\n          overscanRowCount={10}\n          style={{paddingBottom: LOGS_PADDING_BOTTOM}}\n          onScroll={this.onScroll}\n        />\n      </div>\n    );\n  }\n}\n\nclass AutoSizer extends React.Component<{\n  children: (size: {width: number; height: number}) => React.ReactNode;\n}> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.measure();\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (el && el instanceof HTMLElement && 'ResizeObserver' in window) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO((entries: any) => {\n        this.setState({\n          width: entries[0].contentRect.width,\n          height: entries[0].contentRect.height,\n        });\n      });\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  componentDidUpdate() {\n    this.measure();\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  measure() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (!el || !(el instanceof HTMLElement)) {\n      return;\n    }\n    if (el.clientWidth !== this.state.width || el.clientHeight !== this.state.height) {\n      this.setState({width: el.clientWidth, height: el.clientHeight});\n    }\n  }\n\n  render() {\n    return <div style={{width: '100%', height: '100%'}}>{this.props.children(this.state)}</div>;\n  }\n}\n\nconst ListEmptyState = styled.div`\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 50px);\n`;\n","import {Box, Button, Group, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../launchpad/LaunchButton';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment, RunPageFragment} from './types/RunFragments.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\ninterface RunActionButtonsProps {\n  run: RunPageFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nexport const CancelRunButton: React.FC<{run: RunFragment}> = ({run}) => {\n  const {id: runId, canTerminate} = run;\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = runId && errors[runId];\n      if (error && 'message' in error) {\n        SharedToaster.show({\n          message: error.message,\n          icon: 'error',\n          intent: 'danger',\n        });\n      }\n    },\n    [runId],\n  );\n\n  if (!runId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        icon={<Icon name=\"cancel\" />}\n        intent=\"danger\"\n        disabled={showDialog}\n        onClick={() => setShowDialog(true)}\n      >\n        Terminate\n      </Button>\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[runId]: canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const canRunAllSteps = (run: RunFragment) => doneStatuses.has(run.status);\nexport const canRunFromFailure = (run: RunFragment) =>\n  run.executionPlan && failedStatuses.has(run.status);\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const jobError = useJobAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n\n  const currentRunSelection = stepSelectionFromRunTags(run, graph, metadata);\n  const currentRunIsFromFailure = run.tags?.some(\n    (t) => t.key === DagsterTag.IsResumeRetry && t.value === 'true',\n  );\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'cached',\n    scope: '*',\n    title: 'All steps in root run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !canRunAllSteps(run),\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'linear_scale',\n    scope: currentRunSelection?.query || '*',\n    title: 'Same steps',\n    disabled: !currentRunSelection || !(currentRunSelection.finished || currentRunSelection.failed),\n    tooltip: (\n      <div>\n        {!currentRunSelection || !currentRunSelection.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !currentRunSelection.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={currentRunSelection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: currentRunSelection!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'op',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected steps' : 'Selected step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From selected',\n    disabled: !canRunAllSteps(run) || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailureEnabled = canRunFromFailure(run);\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From failure',\n    disabled: !fromFailureEnabled,\n    tooltip: !fromFailureEnabled\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : fromFailureEnabled && currentRunIsFromFailure\n    ? fromFailure\n    : currentRunSelection?.present\n    ? same\n    : null;\n\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (jobError?.tooltip) {\n      return jobError?.tooltip;\n    }\n    return run.hasReExecutePermission ? undefined : DEFAULT_DISABLED_REASON;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          primary={primary}\n          options={options}\n          title={\n            primary.scope === '*'\n              ? `Re-execute all (*)`\n              : primary.scope\n              ? `Re-execute (${primary.scope})`\n              : `Re-execute ${primary.title}`\n          }\n          tooltip={tooltip()}\n          icon={jobError?.icon}\n          disabled={jobError?.disabled || !run.hasReExecutePermission}\n        />\n      </Box>\n      {!doneStatuses.has(run.status) ? <CancelRunButton run={run} /> : null}\n    </Group>\n  );\n};\n\nconst StepSelectionDescription: React.FC<{selection: StepSelection | null}> = ({selection}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import {gql} from '@apollo/client';\nimport {\n  Button,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  MetadataTable,\n  Popover,\n  Tooltip,\n  Subheading,\n  Box,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {SharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {RunStatus} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {workspacePathFromRunDetails, workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {TimeElapsed} from './TimeElapsed';\nimport {RunDetailsFragment} from './types/RunDetails.types';\nimport {RunFragment} from './types/RunFragments.types';\n\nexport const timingStringForStatus = (status?: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling…';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.NOT_STARTED:\n      return 'Waiting to start…';\n    case RunStatus.STARTED:\n      return 'Started…';\n    case RunStatus.STARTING:\n      return 'Starting…';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    default:\n      return 'None';\n  }\n};\n\nconst LoadingOrValue: React.FC<{\n  loading: boolean;\n  children: () => React.ReactNode;\n}> = ({loading, children}) =>\n  loading ? <div style={{color: Colors.Gray400}}>Loading…</div> : <div>{children()}</div>;\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const RunDetails: React.FC<{\n  loading: boolean;\n  run: RunDetailsFragment | undefined;\n}> = ({loading, run}) => {\n  return (\n    <MetadataTable\n      spacing={0}\n      rows={[\n        {\n          key: 'Started',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimestampDisplay timestamp={run.startTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Ended',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.endTime) {\n                  return <TimestampDisplay timestamp={run.endTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Duration',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimeElapsed startUnix={run.startTime} endUnix={run.endTime} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\ntype VisibleDialog = 'config' | 'delete' | 'terminate' | null;\n\nexport const RunConfigDialog: React.FC<{run: RunFragment; isJob: boolean}> = ({run, isJob}) => {\n  const {runConfigYaml} = run;\n  const [visibleDialog, setVisibleDialog] = React.useState<VisibleDialog>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const copy = useCopyToClipboard();\n  const history = useHistory();\n\n  const copyConfig = () => {\n    copy(runConfigYaml);\n    SharedToaster.show({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const jobPath = workspacePathFromRunDetails({\n    id: run.id,\n    repositoryName: run.repositoryOrigin?.repositoryName,\n    repositoryLocationName: run.repositoryOrigin?.repositoryLocationName,\n    pipelineName: run.pipelineName,\n    isJob,\n  });\n\n  return (\n    <div>\n      <Group direction=\"row\" spacing={8}>\n        {run.hasReExecutePermission ? (\n          <AnchorButton icon={<Icon name=\"edit\" />} to={jobPath}>\n            Open in Launchpad\n          </AnchorButton>\n        ) : (\n          <Tooltip content={NO_LAUNCH_PERMISSION_MESSAGE} useDisabledButtonTooltipFix>\n            <Button icon={<Icon name=\"edit\" />} disabled>\n              Open in Launchpad\n            </Button>\n          </Tooltip>\n        )}\n        <Button icon={<Icon name=\"tag\" />} onClick={() => setVisibleDialog('config')}>\n          View tags and config\n        </Button>\n        <Popover\n          position=\"bottom-right\"\n          content={\n            <Menu>\n              <Tooltip content=\"Loadable in dagit-debug\" position=\"left\" targetTagName=\"div\">\n                <MenuItem\n                  text=\"Download debug file\"\n                  icon={<Icon name=\"download_for_offline\" />}\n                  onClick={() => window.open(`${rootServerURI}/download_debug/${run.runId}`)}\n                />\n              </Tooltip>\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </Group>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        onClose={() => setVisibleDialog(null)}\n        style={{\n          width: '90vw',\n          maxWidth: '1000px',\n          minWidth: '600px',\n          height: '90vh',\n          maxHeight: '1000px',\n          minHeight: '600px',\n        }}\n        title=\"Run configuration\"\n      >\n        <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n          <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={run.tags} mode={isJob ? null : run.mode} />\n              </div>\n            </Box>\n            <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n              <Box\n                border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n                padding={{left: 24, bottom: 16}}\n              >\n                <Subheading>Config</Subheading>\n              </Box>\n              <CodeMirrorContainer>\n                <StyledReadOnlyCodeMirror\n                  value={runConfigYaml}\n                  options={{lineNumbers: true, mode: 'yaml'}}\n                  theme={['config-editor']}\n                />\n              </CodeMirrorContainer>\n            </Box>\n          </Box>\n          <DialogFooter topBorder>\n            <Button onClick={() => copyConfig()} intent=\"none\">\n              Copy config\n            </Button>\n            <Button onClick={() => setVisibleDialog(null)} intent=\"primary\">\n              OK\n            </Button>\n          </DialogFooter>\n        </Box>\n      </Dialog>\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            if (run.repositoryOrigin) {\n              history.push(\n                workspacePipelinePath({\n                  repoName: run.repositoryOrigin.repositoryName,\n                  repoLocation: run.repositoryOrigin.repositoryLocationName,\n                  pipelineName: run.pipelineName,\n                  isJob,\n                  path: '/runs',\n                }),\n              );\n            } else {\n              setVisibleDialog(null);\n            }\n          }}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            refetch();\n          }}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .react-codemirror2,\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n\nexport const RUN_DETAILS_FRAGMENT = gql`\n  fragment RunDetailsFragment on Run {\n    id\n    startTime\n    endTime\n    status\n  }\n`;\n","import {gql} from '@apollo/client';\n\nimport {EXECUTION_PLAN_TO_GRAPH_FRAGMENT} from '../gantt/toGraphQueryItems';\n\nimport {LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT} from './LogsScrollingTable';\nimport {RUN_DETAILS_FRAGMENT} from './RunDetails';\nimport {RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT} from './RunMetadataProvider';\n\nexport const RUN_FRAGMENT = gql`\n  fragment RunFragment on Run {\n    id\n    runConfigYaml\n    runId\n    canTerminate\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    status\n    mode\n    tags {\n      key\n      value\n    }\n    assets {\n      id\n      key {\n        path\n      }\n    }\n    rootRunId\n    parentRunId\n    pipelineName\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    pipelineSnapshotId\n    executionPlan {\n      artifactsPersisted\n      ...ExecutionPlanToGraphFragment\n    }\n    stepKeysToExecute\n    updateTime\n    stepStats {\n      stepKey\n      status\n      startTime\n      endTime\n      attempts {\n        startTime\n        endTime\n      }\n      markers {\n        startTime\n        endTime\n      }\n    }\n    ...RunDetailsFragment\n  }\n\n  ${EXECUTION_PLAN_TO_GRAPH_FRAGMENT}\n  ${RUN_DETAILS_FRAGMENT}\n`;\n\nexport const RUN_DAGSTER_RUN_EVENT_FRAGMENT = gql`\n  fragment RunDagsterRunEventFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n\n    ...LogsScrollingTableMessageFragment\n    ...RunMetadataProviderMessageFragment\n  }\n\n  ${LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT}\n  ${RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT}\n`;\n\nexport const RUN_PAGE_FRAGMENT = gql`\n  fragment RunPageFragment on Run {\n    id\n    parentPipelineSnapshotId\n    ...RunFragment\n  }\n\n  ${RUN_FRAGMENT}\n`;\n","import memoize from 'lodash/memoize';\nimport uniq from 'lodash/uniq';\n\nimport {DagsterEventType} from '../graphql/types';\n\nconst typeValues = memoize(() =>\n  uniq(Object.values(DagsterEventType).map(eventTypeToDisplayType)).sort(),\n);\n\nexport const eventTypeToDisplayType = (eventType: string) => {\n  switch (eventType) {\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_ENQUEUED:\n      return DagsterEventType.RUN_ENQUEUED;\n    case DagsterEventType.PIPELINE_DEQUEUED:\n      return DagsterEventType.RUN_DEQUEUED;\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_START:\n      return DagsterEventType.RUN_START;\n    case DagsterEventType.PIPELINE_SUCCESS:\n      return DagsterEventType.RUN_SUCCESS;\n    case DagsterEventType.PIPELINE_FAILURE:\n      return DagsterEventType.RUN_FAILURE;\n    case DagsterEventType.PIPELINE_CANCELING:\n      return DagsterEventType.RUN_CANCELING;\n    case DagsterEventType.PIPELINE_CANCELED:\n      return DagsterEventType.RUN_CANCELED;\n\n    default:\n      return eventType;\n  }\n};\n\nexport const getRunFilterProviders = memoize(\n  (stepNames: string[] = []) => {\n    return [\n      {\n        token: 'step',\n        values: () => stepNames,\n      },\n      {\n        token: 'type',\n        values: typeValues,\n      },\n      {\n        token: 'query',\n        values: () => [],\n      },\n    ];\n  },\n  (stepNames: string[] = []) => JSON.stringify(stepNames),\n);\n","import {LogLevel} from './LogLevel';\nimport {LogNode} from './types';\n\nexport const logNodeLevel = (node: LogNode): LogLevel =>\n  node.__typename === 'LogMessageEvent' ? node.level : LogLevel.EVENT;\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {showLaunchError} from '../launchpad/showLaunchError';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {\n  getReexecutionVariables,\n  handleLaunchResult,\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {RunPageFragment} from './types/RunFragments.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\nexport const useJobReExecution = (run: RunPageFragment | undefined | null) => {\n  const history = useHistory();\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  return React.useCallback(\n    async (style: ReExecutionStyle) => {\n      if (!run || !run.pipelineSnapshotId || !repoMatch) {\n        return;\n      }\n\n      const variables = getReexecutionVariables({\n        run,\n        style,\n        repositoryLocationName: repoMatch.match.repositoryLocation.name,\n        repositoryName: repoMatch.match.repository.name,\n      });\n\n      try {\n        const result = await launchPipelineReexecution({variables});\n        handleLaunchResult(run.pipelineName, result.data?.launchPipelineReexecution, history, {\n          preserveQuerystring: true,\n          behavior: 'open',\n        });\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n    },\n    [history, launchPipelineReexecution, repoMatch, run],\n  );\n};\n"],"names":["highlightTimer","GanttChartModeControl","React","value","onChange","hideTimedMode","buttons","id","GanttChartMode","icon","tooltip","push","activeItems","Set","onClick","ButtonGroup","msToMinuteLabel","ms","Math","round","msToSecondLabel","toFixed","msToSubsecondLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","scale","viewport","nowMs","startMs","highlightedMs","layoutSize","transform","LEFT_INSET","left","ticks","lines","pxPerMs","tickConfig","find","t","pxPerTick","firstTickX","floor","x","width","key","label","className","style","TICK_LABEL_WIDTH","TimescaleContainer","TimescaleTicksContainer","length","formatElapsedTime","map","idx","timeX","labelOffset","TimescaleLinesContainer","height","max","styled","CSS_DURATION","Colors","TICKS_ROW_HEIGHT","FontFamily","ZoomSlider","props","ZoomSliderContainer","$fillColor","onMouseDown","e","initialX","rect","currentTarget","closest","getBoundingClientRect","target","HTMLElement","classList","contains","pageX","onUpdate","nextValue","min","document","addEventListener","onRelease","removeEventListener","right","top","tabIndex","SliderStyles","validateSavedMode","storedValue","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","timestamp","debounced","clearTimeout","setTimeout","dispatchEvent","CustomEvent","detail","GanttChart","graph","onSetSelection","options","selection","toolbarActions","useStateWithStorage","mode","setMode","DEFAULT_OPTIONS","state","setState","cachedLayout","cachedLayoutParams","graphFiltered","filterByQuery","query","layoutParams","nodes","hideUnselectedSteps","all","layout","names","ns","n","name","join","current","buildLayout","updateOptions","changes","onChangeMode","onUpdateQuery","onDoubleClickStep","stepKey","GanttChartContainer","zoom","v","Checkbox","marginBottom","checked","hideWaiting","flex","GanttChartInner","useViewport","containerProps","onMoveToViewport","hoveredStep","setHoveredNodeName","hoveredTime","setHoveredTime","overrideNowTime","Date","now","setNowMs","metadata","rootServerURI","AppContext","WebSocketContext","availability","disabled","status","lostWebsocket","WebSocket","CLOSED","minScale","MIN_SCALE","startedPipelineAt","exp","log","MAX_SCALE","exitedAt","renderInterval","timeout","listener","adjustLayoutWithRunMetadata","EMPTY_RUN_METADATA","boxes","b","BOX_SPACING_X","TOP_INSET","y","BOX_HEIGHT","BOTTOM_INSET","node","keys","includes","bounds","boundsForBox","maxX","minX","maxY","minY","focusedTime","sortedSelectedSteps","steps","filter","undefined","sort","a","start","firstMeta","lastMeta","end","measurementComplete","content","overflow","position","GanttChartViewportContents","focusedSteps","onClickStep","GraphQueryInputContainer","WebsocketWarning","Box","justifyContent","margin","bottom","Group","direction","spacing","background","padding","vertical","horizontal","alignItems","Icon","color","maxWidth","whiteSpace","FilterInputsBackgroundBox","gap","GraphQueryInput","items","placeholder","presets","interestingQueriesFor","SplitPanelContainer","identifier","axis","first","firstInitialPercent","second","GanttStatusPanel","onHighlightStep","intersectsViewport","verticalLinesAtXCoord","forEach","box","children","child","childIdx","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","BOX_DOT_WIDTH_CUTOFF","evt","onDoubleClick","onMouseEnter","onMouseLeave","isDynamicStep","BOX_DOT_MARGIN_Y","BOX_MARGIN_Y","BOX_DOT_SIZE","boxStyleFor","IStepState","Spinner","purpose","truncatedBoxLabel","markers","marker","aCenterY","bIsDot","bCenterY","straight","border","LINE_SIZE","maxXAvoidingOverlap","borderTop","zIndex","borderRight","isEqual","BOX_SHOW_LABEL_WIDTH_CUTOFF","totalPadding","maxLength","withMiddleTruncation","SpinnerWrapper","GanttChartLoadingState","runId","marginTop","QueuedState","run","NonIdealState","title","description","action","to","runsPathWithFilters","token","OptionsContainer","CursorControlsContainer","OptionsDivider","OptionsSpacer","toGraphQueryItems","plan","runtimeStepMetadata","keyExpansionMap","runtimeStepKeys","Object","step","kind","StepKind","invocationsOfPlannedDynamicStep","inputs","every","i","dependsOn","s","nodeTable","stepRuntimeKeys","outputs","input","nodeInput","upstream","upstreamKeys","replacePlannedIndex","upstreamKey","solid","upstreamOutput","dependedBy","values","EXECUTION_PLAN_TO_GRAPH_FRAGMENT","gql","OverflowFade","OverflowButtonContainer","OverflowButton","CellTruncationProvider","isOverflowing","contentContainerRef","onView","onExpand","defaultExpand","this","detectOverflow","firstElementChild","scrollHeight","message","textContent","showCustomAlert","body","ref","forceExpandability","LogsRowStructuredContent","location","useLocation","eventType","__typename","FailureContent","error","metadataEntries","failureMetadata","errorSource","StepUpForRetryContent","logCaptureSteps","DefaultContent","currentQuery","qs","search","updatedQuery","logType","logs","href","pathname","rows","item","eventColor","eventIntent","typeCheck","success","entries","expectationResult","AssetMetadataContent","assetKey","operationResult","ignoreQueryPrefix","logFileKey","rawLogsUrl","rawLogsLink","JSON","stringify","stepKeys","assertUnreachable","Tag","intent","fontSize","eventTypeToDisplayType","contextMessage","errorMessage","errorStack","errorCause","stack","ErrorSource","errorChain","chainLink","index","isExplicitLink","minimal","DagsterEventType","assetDetailsPathForKey","asOf","assetDashboardLink","marginLeft","MetadataEntry","styles","paddingBottom","displayNameForAssetKey","Structured","PythonErrorInfo","StructuredMemoizedContent","highlighted","LOGS_ROW_STRUCTURED_FRAGMENT","METADATA_ENTRY_FRAGMENT","PYTHON_ERROR_FRAGMENT","stepStartTime","level","LogLevel","time","runStartTime","displayName","Unstructured","UnstructuredMemoizedContent","LOGS_ROW_UNSTRUCTURED_FRAGMENT","LogsScrollingTable","filterKey","filterStepKeys","table","onWidthsChanged","didResize","minHeight","AutoSizer","LogsScrollingTableSized","loading","filteredNodes","allNodes","l","logNodeLevel","levels","sinceTime","Number","hasTextFilter","logQuery","textMatchNodes","f","toLowerCase","hideNonMatches","filterLogs","LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT","list","cache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","rowIndex","clientsideKey","isAtBottomOrZero","scrollToBottomObserver","onScroll","scrollTop","clientHeight","atTopAndStarting","atBottom","scrollToTime","findIndex","alignment","offset","iterations","getOffsetForRow","scrollToPosition","rowRenderer","parent","focusedTimeMatch","textMatch","lastRowStyles","borderBottom","noContentRenderer","el","ReactDOM","attachScrollToBottomObserver","window","requestAnimationFrame","prevProps","recomputeGridSize","disconnect","clearAll","forceUpdate","listEl","lastHeight","MutationObserver","rowgroupEl","querySelector","observe","attributes","subtree","console","warn","ListEmptyState","deferredMeasurementCache","rowCount","rowHeight","overscanRowCount","resizeObserver","measure","RO","contentRect","clientWidth","CancelRunButton","canTerminate","showDialog","setShowDialog","closeDialog","onComplete","terminationState","errors","SharedToaster","isOpen","onClose","selectedRuns","stepSelectionWithState","stepStates","present","failed","finished","stepState","canRunAllSteps","doneStatuses","canRunFromFailure","executionPlan","failedStatuses","RunActionButtons","onLaunch","artifactsPersisted","jobError","useJobAvailabilityErrorForRun","currentRunSelection","tag","tags","DagsterTag","k","stepSelectionFromRunTags","currentRunIsFromFailure","some","full","scope","type","same","StepSelectionDescription","selected","fromSelected","Promise","resolve","selectionAndDownstreamQuery","selectionKeys","fromFailureEnabled","fromFailure","option","preferredRerun","primary","runCount","hasReExecutePermission","DEFAULT_DISABLED_REASON","paddingLeft","display","timingStringForStatus","RunStatus","LoadingOrValue","TIME_FORMAT","showSeconds","showTimezone","RunDetails","startTime","timeFormat","endTime","startUnix","endUnix","RunConfigDialog","isJob","runConfigYaml","visibleDialog","setVisibleDialog","refetch","RunsQueryRefetchContext","copy","useCopyToClipboard","history","useHistory","jobPath","workspacePathFromRunDetails","repositoryName","repositoryOrigin","repositoryLocationName","pipelineName","A","NO_LAUNCH_PERMISSION_MESSAGE","useDisabledButtonTooltipFix","targetTagName","text","open","hasDeletePermission","minWidth","maxHeight","side","CodeMirrorContainer","lineNumbers","theme","topBorder","workspacePipelinePath","repoName","repoLocation","path","onTerminateInstead","hasTerminatePermission","RUN_DETAILS_FRAGMENT","RUN_FRAGMENT","RUN_DAGSTER_RUN_EVENT_FRAGMENT","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","RUN_PAGE_FRAGMENT","typeValues","memoize","uniq","getRunFilterProviders","stepNames","useJobReExecution","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","launchPipelineReexecution","repoMatch","useRepositoryForRunWithParentSnapshot","pipelineSnapshotId","variables","getReexecutionVariables","match","repositoryLocation","repository","result","handleLaunchResult","data","preserveQuerystring","behavior","showLaunchError"],"sourceRoot":""}