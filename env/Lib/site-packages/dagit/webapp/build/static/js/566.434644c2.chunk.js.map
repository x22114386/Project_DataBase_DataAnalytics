{"version":3,"file":"static/js/566.434644c2.chunk.js","mappings":"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","sources":["../../core/src/launchpad/LaunchpadTabs.tsx","../../core/src/launchpad/LaunchpadStoredSessionsContainer.tsx"],"sourcesContent":["import {Box, ButtonLink, Colors, Icon, IconWrapper} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {\n  applyChangesToSession,\n  applyRemoveSession,\n  applySelectSession,\n  IStorageData,\n} from '../app/ExecutionSessionStorage';\n\ninterface ExecutationTabProps {\n  canRemove?: boolean;\n  title: string;\n  active?: boolean;\n  onChange?: (title: string) => void;\n  onRemove?: () => void;\n  onClick: () => void;\n}\n\nconst LaunchpadTab = (props: ExecutationTabProps) => {\n  const {canRemove, title, onChange, onClick, onRemove, active} = props;\n\n  const input = React.useRef<HTMLInputElement>(null);\n  const [editing, setEditing] = React.useState(false);\n  const [value, setValue] = React.useState(title);\n\n  const onDoubleClick = React.useCallback(() => {\n    if (onChange) {\n      setEditing(true);\n    }\n  }, [onChange]);\n\n  const onClickRemove = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation();\n      onRemove && onRemove();\n    },\n    [onRemove],\n  );\n\n  const handleBlur = React.useCallback(() => {\n    setEditing(false);\n    onChange && onChange(value);\n  }, [onChange, value]);\n\n  const handleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    [],\n  );\n\n  React.useEffect(() => {\n    const el = input.current;\n    if (el && editing) {\n      el.focus();\n      el.select();\n    }\n  }, [editing]);\n\n  return (\n    <TabContainer $active={active || false} onDoubleClick={onDoubleClick} onClick={onClick}>\n      {editing ? (\n        <input\n          ref={input}\n          type=\"text\"\n          onKeyDown={(e) => e.key === 'Enter' && e.currentTarget.blur()}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={value}\n          placeholder=\"Type a tab nameâ€¦\"\n        />\n      ) : (\n        title\n      )}\n      {canRemove && !editing && onRemove ? (\n        <RemoveButton onClick={onClickRemove}>\n          <Icon name=\"close\" color={Colors.Olive500} />\n        </RemoveButton>\n      ) : null}\n    </TabContainer>\n  );\n};\n\nconst REMOVE_ALL_THRESHOLD = 3;\n\ninterface LaunchpadTabsProps {\n  data: IStorageData;\n  onCreate: () => void;\n  onSave: (data: IStorageData) => void;\n}\n\nexport const LaunchpadTabs = (props: LaunchpadTabsProps) => {\n  const {data, onCreate, onSave} = props;\n  const {sessions} = data;\n  const sessionKeys = Object.keys(sessions);\n  const sessionCount = sessionKeys.length;\n\n  const confirm = useConfirmation();\n\n  const onApply = (mutator: any, ...args: any[]) => {\n    onSave(mutator(data, ...args));\n  };\n\n  const onRemove = async (keyToRemove: string) => {\n    if (sessionCount > 1) {\n      await confirm({\n        title: 'Remove tab?',\n        description: `The configuration for ${\n          keyToRemove ? `\"${sessions[keyToRemove].name}\"` : 'this tab'\n        } will be discarded.`,\n      });\n      onApply(applyRemoveSession, keyToRemove);\n    }\n  };\n\n  const onRemoveAll = async () => {\n    await confirm({\n      title: 'Remove all tabs?',\n      description: 'All configuration tabs will be discarded.',\n    });\n\n    let updatedData = data;\n    sessionKeys.forEach((keyToRemove) => {\n      updatedData = applyRemoveSession(updatedData, keyToRemove);\n    });\n\n    onSave(updatedData);\n  };\n\n  return (\n    <Box border={{side: 'bottom', width: 1, color: Colors.KeylineGray}} padding={{top: 12}}>\n      <LaunchpadTabsContainer>\n        {sessionKeys.map((key) => (\n          <LaunchpadTab\n            canRemove={sessionCount > 1}\n            key={key}\n            active={key === data.current}\n            title={sessions[key].name || 'Unnamed'}\n            onClick={() => onApply(applySelectSession, key)}\n            onChange={(name) => onApply(applyChangesToSession, key, {name})}\n            onRemove={() => onRemove(key)}\n          />\n        ))}\n        <LaunchpadTab title=\"+ Add...\" onClick={onCreate} />\n        {sessionKeys.length > REMOVE_ALL_THRESHOLD ? (\n          <ButtonLink color={Colors.Red500} onClick={onRemoveAll}>\n            <Box\n              flex={{direction: 'row', gap: 4, alignItems: 'center'}}\n              style={{whiteSpace: 'nowrap'}}\n            >\n              <Icon name=\"delete\" color={Colors.Red500} />\n              <div>Remove all</div>\n            </Box>\n          </ButtonLink>\n        ) : null}\n      </LaunchpadTabsContainer>\n    </Box>\n  );\n};\n\nconst LaunchpadTabsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n  gap: 8px;\n  z-index: 1;\n  flex-direction: row;\n  padding-left: 12px;\n  overflow-x: auto;\n`;\n\nconst TabContainer = styled.div<{$active: boolean}>`\n  align-items: center;\n  user-select: none;\n  padding: 8px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  white-space: nowrap;\n\n  ${({$active}) =>\n    $active\n      ? css`\n          font-weight: 600;\n          background-color: ${Colors.Gray100};\n          color: ${Colors.ForestGreen};\n          box-shadow: ${Colors.ForestGreen} 0 -2px 0 inset;\n        `\n      : css`\n          font-weight: normal;\n          background-color: ${Colors.Gray50};\n          color: ${Colors.Gray300};\n          box-shadow: ${Colors.Olive200} 0 -1px 0 inset;\n\n          &:hover {\n            background-color: ${Colors.Gray100};\n            box-shadow: ${Colors.Olive500} 0 -1px 0 inset;\n            color: ${Colors.Olive500};\n          }\n        `}\n\n  &:last-child {\n    padding-right: 12px;\n  }\n\n  input {\n    background-color: transparent;\n    font-size: 13px;\n    border: 0;\n    outline: none;\n    padding: 0;\n  }\n\n  cursor: ${({$active}) => (!$active ? 'pointer' : 'inherit')};\n`;\n\nconst RemoveButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  padding: 0;\n\n  ${IconWrapper} {\n    transition: background-color 100ms;\n  }\n\n  &:hover ${IconWrapper} {\n    background-color: ${Colors.Olive700};\n  }\n`;\n","import * as React from 'react';\n\nimport {\n  applyChangesToSession,\n  applyCreateSession,\n  IExecutionSessionChanges,\n  useExecutionSessionStorage,\n  useInitialDataForMode,\n} from '../app/ExecutionSessionStorage';\nimport {RepoAddress} from '../workspace/types';\n\nimport {LaunchpadType} from './LaunchpadRoot';\nimport LaunchpadSession from './LaunchpadSession';\nimport {LaunchpadTabs} from './LaunchpadTabs';\nimport {\n  LaunchpadSessionPartitionSetsFragment,\n  LaunchpadSessionPipelineFragment,\n} from './types/LaunchpadRoot.types';\n\ninterface Props {\n  launchpadType: LaunchpadType;\n  pipeline: LaunchpadSessionPipelineFragment;\n  partitionSets: LaunchpadSessionPartitionSetsFragment;\n  repoAddress: RepoAddress;\n}\n\nexport const LaunchpadStoredSessionsContainer = (props: Props) => {\n  const {launchpadType, pipeline, partitionSets, repoAddress} = props;\n\n  const initialDataForMode = useInitialDataForMode(pipeline, partitionSets);\n  const [data, onSave] = useExecutionSessionStorage(repoAddress, pipeline.name, initialDataForMode);\n\n  const onCreateSession = () => {\n    onSave(applyCreateSession(data, initialDataForMode));\n  };\n\n  const onSaveSession = (changes: IExecutionSessionChanges) => {\n    onSave(applyChangesToSession(data, data.current, changes));\n  };\n\n  const currentSession = data.sessions[data.current];\n\n  return (\n    <>\n      <LaunchpadTabs data={data} onCreate={onCreateSession} onSave={onSave} />\n      <LaunchpadSession\n        launchpadType={launchpadType}\n        session={currentSession}\n        onSave={onSaveSession}\n        pipeline={pipeline}\n        partitionSets={partitionSets}\n        repoAddress={repoAddress}\n      />\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default LaunchpadStoredSessionsContainer;\n"],"names":["LaunchpadTab","props","canRemove","title","onChange","onClick","onRemove","active","input","React","editing","setEditing","value","setValue","onDoubleClick","onClickRemove","e","stopPropagation","handleBlur","handleChange","target","el","current","focus","select","TabContainer","$active","ref","type","onKeyDown","key","currentTarget","blur","onBlur","placeholder","RemoveButton","Icon","name","color","Colors","LaunchpadTabs","data","onCreate","onSave","sessions","sessionKeys","Object","keys","sessionCount","length","confirm","useConfirmation","onApply","mutator","args","keyToRemove","description","applyRemoveSession","onRemoveAll","updatedData","forEach","Box","border","side","width","padding","top","LaunchpadTabsContainer","map","applySelectSession","applyChangesToSession","ButtonLink","flex","direction","gap","alignItems","style","whiteSpace","styled","css","IconWrapper","LaunchpadStoredSessionsContainer","launchpadType","pipeline","partitionSets","repoAddress","initialDataForMode","useInitialDataForMode","useExecutionSessionStorage","currentSession","applyCreateSession","LaunchpadSession","session","changes"],"sourceRoot":""}