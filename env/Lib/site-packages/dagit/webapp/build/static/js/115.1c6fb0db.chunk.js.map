{"version":3,"file":"static/js/115.1c6fb0db.chunk.js","mappings":"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","sources":["../../../node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","../../../node_modules/hammerjs/hammer.js"],"sourcesContent":["/*!\n* chartjs-plugin-zoom v1.1.1\n* undefined\n * (c) 2016-2021 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, callback, sign } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\n\n/**\n * @param {string|function} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {import('chart.js').Chart} chart instance of the chart in question\n * @returns {boolean}\n */\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n\n  return false;\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call. No arguments are passed.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\n\n/** This function use for check what axis now under mouse cursor.\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale}\n */\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\n\n/** This function return only one scale whose position is under mouse cursor and which direction is enabled.\n * If under mouse hasn't scale, then return all other scales which 'mode' is diffrent with overScaleMode.\n * So 'overScaleMode' works as a limiter to scale the user-selected scale (in 'mode') only when the cursor is under the scale,\n * and other directions in 'mode' works as before.\n * Example: mode = 'xy', overScaleMode = 'y' -> it's means 'x' - works as before, and 'y' only works for one scale when cursor is under it.\n * options.overScaleMode can be a function if user want zoom only one scale of many for example.\n * @param {string} mode - 'xy', 'x' or 'y'\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale[]}\n */\nfunction getEnabledScalesByPoint(mode, point, chart) {\n  const scale = getScaleUnderPoint(point, chart);\n\n  if (scale && directionEnabled(mode, scale.axis, chart)) {\n    return [scale];\n  }\n\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (!directionEnabled(mode, scaleItem.axis, chart)) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\n\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\n\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n\n  const centerPoint = scale.isHorizontal() ? center.x : center.y;\n  const minPercent = (scale.getValueForPixel(centerPoint) - scale.min) / range || 0;\n  const maxPercent = 1 - minPercent;\n\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\n\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\n\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {id, axis, options: scaleOpts} = scale;\n\n  const scaleLimits = limits && (limits[id] || limits[axis]) || {};\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n\n  const cmin = Math.max(min, minLimit);\n  const cmax = Math.min(max, maxLimit);\n  const range = zoom ? Math.max(cmax - cmin, minRange) : scale.max - scale.min;\n  if (cmax - cmin !== range) {\n    if (minLimit > cmax - range) {\n      min = cmin;\n      max = cmin + range;\n    } else if (maxLimit < cmin + range) {\n      max = cmax;\n      min = cmax - range;\n    } else {\n      const offset = (range - cmax + cmin) / 2;\n      min = cmin - offset;\n      max = cmax + offset;\n    }\n  } else {\n    min = cmin;\n    max = cmax;\n  }\n  scaleOpts.min = min;\n  scaleOpts.max = max;\n\n  state.updatedScaleLimits[scale.id] = {min, max};\n\n  // return true if the scale range is changed\n  return scale.parse(min) !== scale.min || scale.parse(max) !== scale.max;\n}\n\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\n\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\n\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\n\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\n\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  // The visible range. Ticks can be skipped, and thus not reliable.\n  const range = Math.max(max - min, 1);\n  // How many pixels of delta is required before making a step. stepSize, but limited to max 1/10 of the scale length.\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n\n  return updateRange(scale, {min, max}, limits) || applied;\n}\n\nconst OFFSETS = {\n  second: 500, // 500 ms\n  minute: 30 * 1000, // 30 s\n  hour: 30 * 60 * 1000, // 30 m\n  day: 12 * 60 * 60 * 1000, // 12 h\n  week: 3.5 * 24 * 60 * 60 * 1000, // 3.5 d\n  month: 15 * 24 * 60 * 60 * 1000, // 15 d\n  quarter: 60 * 24 * 60 * 60 * 1000, // 60 d\n  year: 182 * 24 * 60 * 60 * 1000 // 182 d\n};\n\nfunction panNumericalScale(scale, delta, limits, canZoom = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  const {min: minLimit = -Infinity, max: maxLimit = Infinity} = canZoom && limits && limits[scale.axis] || {};\n  if (isNaN(newMin) || isNaN(newMax) || newMin < minLimit || newMax > maxLimit) {\n    // At limit: No change but return true to indicate no need to store the delta.\n    // NaN can happen for 0-dimension scales (either because they were configured\n    // with min === max or because the chart has 0 plottable area).\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, canZoom);\n}\n\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\n\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n};\n\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\n\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\n\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\n\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\n\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\n\n/**\n * @param chart The chart instance\n * @param {number | {x?: number, y?: number, focalPoint?: {x: number, y: number}}} amount The zoom percentage or percentages and focal point\n * @param {string} [transition] Which transition mode to use. Defaults to 'none'\n */\nfunction zoom(chart, amount, transition = 'none') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy', overScaleMode} = zoomOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 1 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 1 && directionEnabled(mode, 'y', chart);\n  const enabledScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, focalPoint, chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction getRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\n\nfunction zoomRect(chart, p0, p1, transition = 'none') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      updateRange(scale, getRange(scale, p0.x, p1.x), limits, true);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      updateRange(scale, getRange(scale, p0.y, p1.y), limits, true);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomScale(chart, scaleId, range, transition = 'none') {\n  storeOriginalScaleLimits(chart, getState(chart));\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n}\n\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\n\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\n\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\n\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  // Add possible cumulative delta from previous pan attempts where scale did not change\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    // The scale changed, reset cumulative delta\n    panDelta[scale.id] = 0;\n  } else {\n    // The scale did not change, store cumulative delta\n    panDelta[scale.id] = delta;\n  }\n}\n\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {mode = 'xy', onPan} = panOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 0 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 0 && directionEnabled(mode, 'y', chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(onPan, [{chart}]);\n}\n\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\n\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  target.addEventListener(type, handlers[type]);\n}\n\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\n\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const {left: offsetX, top: offsetY} = event.target.getBoundingClientRect();\n    const point = {\n      x: event.clientX - offsetX,\n      y: event.clientY - offsetY\n    };\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\n\nfunction mouseDown(chart, event) {\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (keyPressed(getModifierKey(panOptions), event) || keyNotPressed(getModifierKey(zoomOptions.drag), event)) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n\n  addHandler(chart, chart.canvas, 'mousemove', mouseMove);\n}\n\nfunction computeDragRect(chart, mode, beginPoint, endPoint) {\n  const {left: offsetX, top: offsetY} = beginPoint.target.getBoundingClientRect();\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  let {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n\n  if (xEnabled) {\n    left = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n    right = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n  }\n\n  if (yEnabled) {\n    top = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n    bottom = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n  }\n  const width = right - left;\n  const height = bottom - top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\n\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, state.dragStart, event);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n  // Remove drag start and end before chart update to stop drawing selected area\n  state.dragStart = state.dragEnd = null;\n\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom');\n\n  setTimeout(() => (state.dragging = false), 500);\n  callback(onZoomComplete, [{chart}]);\n}\n\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  // Before preventDefault, check if the modifier key required and pressed\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n\n  // Prevent the event from triggering the default behavior (eg. Content scrolling).\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  // Firefox always fires the wheel event twice:\n  // First without the delta and right after that once with the delta properties.\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\n\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n\n  const rect = event.target.getBoundingClientRect();\n  const speed = 1 + (event.deltaY >= 0 ? -zoomOptions.wheel.speed : zoomOptions.wheel.speed);\n  const amount = {\n    x: speed,\n    y: speed,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n\n  zoom(chart, amount);\n\n  if (onZoomComplete) {\n    onZoomComplete();\n  }\n}\n\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\n\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n\n  // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n  // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n  // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n  }\n}\n\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) { // Sometimes Hammer queries this with a null event.\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\n\nfunction pinchAxes(p0, p1) {\n  // fingers position difference\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n\n  // diagonal fingers will change both (xy) axes\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\n\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    // Hammer reports the total scaling. We need the incremental amount\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n\n    zoom(chart, amount);\n\n    // Keep track of overall scale\n    state.scale = e.scale;\n  }\n}\n\nfunction startPinch(chart, state) {\n  if (state.options.zoom.pinch.enabled) {\n    state.scale = 1;\n  }\n}\n\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null; // reset\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\n\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\n\nfunction startPan(chart, state, event) {\n  const {enabled, overScaleMode, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n\n  state.panScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, point, chart);\n  state.delta = {x: 0, y: 0};\n  clearTimeout(state.panEndTimeout);\n  handlePan(chart, state, event);\n}\n\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panEndTimeout = setTimeout(() => (state.panning = false), 500);\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\n\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', () => startPinch(chart, state));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n\n  hammers.set(chart, mc);\n}\n\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\n\nvar version = \"1.1.1\";\n\nvar plugin = {\n  id: 'zoom',\n\n  version,\n\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n  },\n\n  beforeEvent(chart) {\n    const state = getState(chart);\n    if (state.panning || state.dragging) {\n      // cancel any event handling while panning or dragging\n      return false;\n    }\n  },\n\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    state.options = options;\n    addListeners(chart, options);\n  },\n\n  beforeDatasetsDraw: function(chart, args, options) {\n    const {dragStart, dragEnd} = getState(chart);\n\n    if (dragEnd) {\n      const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, dragStart, dragEnd);\n\n      const dragOptions = options.zoom.drag;\n      const ctx = chart.ctx;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n      ctx.fillRect(left, top, width, height);\n\n      if (dragOptions.borderWidth > 0) {\n        ctx.lineWidth = dragOptions.borderWidth;\n        ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n        ctx.strokeRect(left, top, width, height);\n      }\n      ctx.restore();\n    }\n  },\n\n  stop: function(chart) {\n    removeListeners(chart);\n\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n\n  panFunctions,\n\n  zoomFunctions\n};\n\nexport default plugin;\nexport { pan, resetZoom, zoom, zoomScale };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","getEnabledScalesByPoint","point","scale","x","y","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","axis","enabledScales","each","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","set","zoomDelta","zoom","center","range","max","min","newRange","centerPoint","isHorizontal","minPercent","getValueForPixel","getLimit","scaleLimits","prop","fallback","limit","original","id","valueOrDefault","options","updateRange","limits","scaleOpts","minRange","minLimit","Infinity","maxLimit","cmin","Math","cmax","offset","parse","integerChange","v","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","canZoom","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","panFunctions","applied","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","logarithmic","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","callback","getCenter","ca","chartArea","transition","focalPoint","zoomOptions","overScaleMode","xEnabled","yEnabled","update","onZoom","getRange","pixel0","pixel1","v0","v1","getZoomLevel","origRange","scaleId","getOriginalRange","level","panScale","storedDelta","sign","pan","panOptions","onPan","removeHandler","handler","target","removeEventListener","addHandler","addEventListener","mouseMove","dragStart","dragging","dragEnd","zoomStart","onZoomStart","onZoomRejected","getBoundingClientRect","offsetX","offsetY","clientX","clientY","mouseDown","drag","canvas","computeDragRect","beginPoint","endPoint","chartWidth","chartHeight","zoomX","zoomY","mouseUp","onZoomComplete","threshold","rect","distanceX","distanceY","distance","sqrt","p0","p1","zoomRect","setTimeout","wheel","cancelable","preventDefault","deltaY","wheelPreconditions","speed","addDebouncedHandler","name","delay","timeout","clearTimeout","debounce","createEnabler","recognizer","srcEvent","panning","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","startHammer","mc","Hammer","add","on","startPinch","endPinch","enable","onPanStart","panEndTimeout","startPan","onPanComplete","endPan","plugin","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","args","zoomScale","resetZoom","scaleOptions","beforeEvent","beforeUpdate","wheelOptions","dragOptions","ownerDocument","addListeners","beforeDatasetsDraw","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","stop","removeListeners","remove","destroy","delete","stopHammer","removeState","window","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","arguments","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","DIRECTION_VERTICAL","DIRECTION_UP","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","preventSrc","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","define"],"sourceRoot":""}