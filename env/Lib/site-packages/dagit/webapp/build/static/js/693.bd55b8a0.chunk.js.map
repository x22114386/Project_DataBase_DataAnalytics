{"version":3,"file":"static/js/693.bd55b8a0.chunk.js","mappings":"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","sources":["../../core/src/ui/Loading.tsx","../../core/src/workspace/GuessJobLocationRoot.tsx","../../ui/src/components/Alert.tsx","../../ui/src/components/NonIdealState.tsx","../../ui/src/components/Page.tsx","../../ui/src/components/PageHeader.tsx"],"sourcesContent":["import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n    if (!error.networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {Alert, Box, NonIdealState, Page, PageHeader, Table, Heading} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, Redirect, useLocation, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {LoadingSpinner} from '../ui/Loading';\n\nimport {isThisThingAJob, optionToRepoAddress, useRepositoryOptions} from './WorkspaceContext';\nimport {buildRepoPathForHuman} from './buildRepoAddress';\nimport {findRepoContainingPipeline} from './findRepoContainingPipeline';\nimport {workspacePath, workspacePathFromAddress} from './workspacePath';\n\nexport const GuessJobLocationRoot = () => {\n  useTrackPageView();\n\n  const params = useParams<{jobPath: string}>();\n  const {jobPath} = params;\n\n  const entireMatch = useRouteMatch('/guess/(/?.*)');\n  const location = useLocation();\n\n  const toAppend = (entireMatch!.params as any)[0];\n  const {search} = location;\n\n  const {pipelineName} = explorerPathFromString(jobPath);\n  const {loading, options} = useRepositoryOptions();\n\n  if (loading) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n\n  const reposWithMatch = findRepoContainingPipeline(options, pipelineName);\n  if (reposWithMatch.length === 0) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No matching jobs\"\n          description={\n            <div>\n              <div>\n                <strong>{pipelineName}</strong>\n              </div>\n              was not found in any of your definitions.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  if (reposWithMatch.length === 1) {\n    const match = reposWithMatch[0];\n    const repoAddress = optionToRepoAddress(match);\n    const isJob = isThisThingAJob(match, pipelineName);\n    const to = workspacePathFromAddress(\n      repoAddress,\n      `/${isJob ? 'jobs' : 'pipelines'}/${toAppend}${search}`,\n    );\n    return <Redirect to={to} />;\n  }\n\n  const anyPipelines = reposWithMatch.some((repo) => !isThisThingAJob(repo, pipelineName));\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>{pipelineName}</Heading>}\n        icon=\"job\"\n        description={\n          anyPipelines\n            ? 'Job / pipeline in multiple code locations'\n            : 'Job in multiple code locations'\n        }\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Alert\n          intent=\"info\"\n          title={\n            <div>\n              {anyPipelines ? (\n                <>\n                  Jobs or pipelines named <strong>{pipelineName}</strong> were found in multiple\n                  code locations.\n                </>\n              ) : (\n                <>\n                  Jobs named <strong>{pipelineName}</strong> were found in multiple code locations.\n                </>\n              )}\n            </div>\n          }\n        />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th>Code location</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reposWithMatch.map((repository) => {\n            const {\n              repository: {name},\n              repositoryLocation: {name: location},\n            } = repository;\n            const repoString = buildRepoPathForHuman(name, location);\n            return (\n              <tr key={repoString}>\n                <td style={{width: '40%'}}>{repoString}</td>\n                <td>\n                  <Link\n                    to={workspacePath(\n                      name,\n                      location,\n                      `/${\n                        isThisThingAJob(repository, pipelineName) ? 'jobs' : 'pipelines'\n                      }/${pipelineName}`,\n                    )}\n                  >\n                    {pipelineName}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default GuessJobLocationRoot;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n"],"names":["Loading","props","children","purpose","allowStaleData","renderError","queryResult","error","data","loading","React","blankLoading","setBlankLoading","isLoading","Object","keys","length","timer","setTimeout","clearTimeout","networkError","padding","flex","justifyContent","icon","title","LoadingSpinner","isPage","grow","undefined","alignItems","style","height","defaultProps","GuessJobLocationRoot","useTrackPageView","jobPath","useParams","entireMatch","useRouteMatch","location","useLocation","toAppend","params","search","pipelineName","explorerPathFromString","useRepositoryOptions","options","reposWithMatch","findRepoContainingPipeline","vertical","description","match","repoAddress","optionToRepoAddress","isJob","isThisThingAJob","to","workspacePathFromAddress","anyPipelines","some","repo","horizontal","intent","map","repository","name","repositoryLocation","repoString","buildRepoPathForHuman","width","workspacePath","Alert","onClose","backgroundColor","Colors","borderColor","iconColor","textColor","AlertContainer","background","$borderColor","$textColor","direction","spacing","color","AlertTitle","AlertDescription","ButtonWrapper","onClick","styled","Box","NonIdealState","action","shrinkable","singleContentElement","filter","Boolean","gap","margin","borderRadius","maxWidth","size","Page","PageHeader","tags","right","tabs","PageHeaderContainer","top","left","border","side","bottom","wrap"],"sourceRoot":""}