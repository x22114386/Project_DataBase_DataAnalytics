{"version":3,"file":"static/js/737.a8c10838.chunk.js","mappings":"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","sources":["../../core/src/hooks/useDocumentTitle.tsx","../../core/src/instance/InstanceHealthPage.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\n\nexport const InstanceHealthPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.Gray400}}>\n          Loadingâ€¦\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"health\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Subheading>Daemon statuses</Subheading>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? 'â€“' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n"],"names":["useDocumentTitle","title","React","currentTitle","document","InstanceHealthPage","useTrackPageView","pageTitle","InstancePageContext","queryData","useQuery","INSTANCE_HEALTH_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","loading","data","tabs","tab","padding","vertical","horizontal","instance","daemonStatuses","daemonHealth","allDaemonStatuses","style","color","Colors","gql","INSTANCE_HEALTH_FRAGMENT","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","content","position","modifiers","offset","enabled","options","Icon","name","WorkspaceStatus","placeholder","codeLocations","type","Tooltip","placement","Spinner","purpose","fillColor","width","InstanceTabs","props","healthTitle","canSeeConfig","useCanSeeConfig","Box","flex","direction","justifyContent","alignItems","Tabs","selectedTabId","TabLink","id","to","icon","bottom","QueryRefresh","INSTANCE_CONFIG_HAS_INFO","hasInfo","styled","disabled","rest","containerProps","getTabA11yProps","getTabContent","titleText","undefined","tabCSS","PageHeader","tags","right","PageHeaderContainer","background","top","left","border","side","gap","wrap","selected","role","tabIndex","count","Count","FontFamily","css","$size","IconWrapper","Tab","children","onChange","size","child","onClick"],"sourceRoot":""}